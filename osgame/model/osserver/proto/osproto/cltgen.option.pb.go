// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: cltgen.option.proto

package osproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RandAccessMode int32

const (
	RandAccessMode_NotAllowed RandAccessMode = 0
	RandAccessMode_Editor     RandAccessMode = 1
	RandAccessMode_Runtime    RandAccessMode = 2
)

// Enum value maps for RandAccessMode.
var (
	RandAccessMode_name = map[int32]string{
		0: "NotAllowed",
		1: "Editor",
		2: "Runtime",
	}
	RandAccessMode_value = map[string]int32{
		"NotAllowed": 0,
		"Editor":     1,
		"Runtime":    2,
	}
)

func (x RandAccessMode) Enum() *RandAccessMode {
	p := new(RandAccessMode)
	*p = x
	return p
}

func (x RandAccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RandAccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_cltgen_option_proto_enumTypes[0].Descriptor()
}

func (RandAccessMode) Type() protoreflect.EnumType {
	return &file_cltgen_option_proto_enumTypes[0]
}

func (x RandAccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RandAccessMode.Descriptor instead.
func (RandAccessMode) EnumDescriptor() ([]byte, []int) {
	return file_cltgen_option_proto_rawDescGZIP(), []int{0}
}

var file_cltgen_option_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         70001,
		Name:          "cltgen.pk",
		Tag:           "bytes,70001,opt,name=pk",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]string)(nil),
		Field:         70002,
		Name:          "cltgen.index",
		Tag:           "bytes,70002,rep,name=index",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*RandAccessMode)(nil),
		Field:         70003,
		Name:          "cltgen.random_access",
		Tag:           "varint,70003,opt,name=random_access,enum=cltgen.RandAccessMode",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70004,
		Name:          "cltgen.gen_default",
		Tag:           "varint,70004,opt,name=gen_default",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70011,
		Name:          "cltgen.gamecore_cpp2cs",
		Tag:           "varint,70011,opt,name=gamecore_cpp2cs",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70012,
		Name:          "cltgen.gamecore_type",
		Tag:           "varint,70012,opt,name=gamecore_type",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70013,
		Name:          "cltgen.csharp_type",
		Tag:           "varint,70013,opt,name=csharp_type",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70014,
		Name:          "cltgen.system_databin",
		Tag:           "varint,70014,opt,name=system_databin",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70015,
		Name:          "cltgen.gamecore_databin",
		Tag:           "varint,70015,opt,name=gamecore_databin",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         70016,
		Name:          "cltgen.cpp2cs_transfer",
		Tag:           "varint,70016,opt,name=cpp2cs_transfer",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90001,
		Name:          "cltgen.gamecore_enum",
		Tag:           "varint,90001,opt,name=gamecore_enum",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90002,
		Name:          "cltgen.csharp_enum",
		Tag:           "varint,90002,opt,name=csharp_enum",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90003,
		Name:          "cltgen.flags",
		Tag:           "varint,90003,opt,name=flags",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90004,
		Name:          "cltgen.bp_export",
		Tag:           "varint,90004,opt,name=bp_export",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         90005,
		Name:          "cltgen.uninode_enum",
		Tag:           "varint,90005,opt,name=uninode_enum",
		Filename:      "cltgen.option.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         70091,
		Name:          "cltgen.uninode_enum_alias",
		Tag:           "bytes,70091,opt,name=uninode_enum_alias",
		Filename:      "cltgen.option.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string pk = 70001;
	E_Pk = &file_cltgen_option_proto_extTypes[0]
	// repeated string index = 70002;
	E_Index = &file_cltgen_option_proto_extTypes[1]
	// optional cltgen.RandAccessMode random_access = 70003;
	E_RandomAccess = &file_cltgen_option_proto_extTypes[2]
	// optional bool gen_default = 70004;
	E_GenDefault = &file_cltgen_option_proto_extTypes[3]
	// optional bool gamecore_cpp2cs = 70011;
	E_GamecoreCpp2Cs = &file_cltgen_option_proto_extTypes[4]
	// optional bool gamecore_type = 70012;
	E_GamecoreType = &file_cltgen_option_proto_extTypes[5]
	// optional bool csharp_type = 70013;
	E_CsharpType = &file_cltgen_option_proto_extTypes[6]
	// optional bool system_databin = 70014;
	E_SystemDatabin = &file_cltgen_option_proto_extTypes[7]
	// optional bool gamecore_databin = 70015;
	E_GamecoreDatabin = &file_cltgen_option_proto_extTypes[8]
	// optional bool cpp2cs_transfer = 70016;
	E_Cpp2CsTransfer = &file_cltgen_option_proto_extTypes[9]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional bool gamecore_enum = 90001;
	E_GamecoreEnum = &file_cltgen_option_proto_extTypes[10]
	// optional bool csharp_enum = 90002;
	E_CsharpEnum = &file_cltgen_option_proto_extTypes[11]
	// optional bool flags = 90003;
	E_Flags = &file_cltgen_option_proto_extTypes[12]
	// optional bool bp_export = 90004;
	E_BpExport = &file_cltgen_option_proto_extTypes[13]
	// optional bool uninode_enum = 90005;
	E_UninodeEnum = &file_cltgen_option_proto_extTypes[14]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string uninode_enum_alias = 70091;
	E_UninodeEnumAlias = &file_cltgen_option_proto_extTypes[15]
)

var File_cltgen_option_proto protoreflect.FileDescriptor

var file_cltgen_option_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6c, 0x74, 0x67, 0x65, 0x6e, 0x2e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x74, 0x67, 0x65, 0x6e, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a,
	0x39, 0x0a, 0x0e, 0x52, 0x61, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x02, 0x3a, 0x31, 0x0a, 0x02, 0x70, 0x6b,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xf1, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6b, 0x3a, 0x37, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf2, 0xa2, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x5e, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf3, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x63, 0x6c, 0x74, 0x67, 0x65, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x64, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x3a, 0x42, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf4, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x67, 0x65, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x3a, 0x4a, 0x0a, 0x0f, 0x67, 0x61,
	0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x70, 0x70, 0x32, 0x63, 0x73, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfb,
	0xa2, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65,
	0x43, 0x70, 0x70, 0x32, 0x63, 0x73, 0x3a, 0x46, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfc, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x42,
	0x0a, 0x0b, 0x63, 0x73, 0x68, 0x61, 0x72, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfd,
	0xa2, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x73, 0x68, 0x61, 0x72, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x48, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xfe, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x62, 0x69, 0x6e, 0x3a, 0x4c, 0x0a, 0x10,
	0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x69, 0x6e,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xff, 0xa2, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x63,
	0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x69, 0x6e, 0x3a, 0x4a, 0x0a, 0x0f, 0x63, 0x70,
	0x70, 0x32, 0x63, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x80,
	0xa3, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x70, 0x70, 0x32, 0x63, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x3a, 0x43, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x91, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x67,
	0x61, 0x6d, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x3f, 0x0a, 0x0b, 0x63,
	0x73, 0x68, 0x61, 0x72, 0x70, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x92, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x63, 0x73, 0x68, 0x61, 0x72, 0x70, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x34, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x93, 0xbf, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x3a, 0x3b, 0x0a, 0x09, 0x62, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x94, 0xbf,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x70, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x3a,
	0x41, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x95, 0xbf,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x3a, 0x51, 0x0a, 0x12, 0x75, 0x6e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcb, 0xa3, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x6f, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cltgen_option_proto_rawDescOnce sync.Once
	file_cltgen_option_proto_rawDescData = file_cltgen_option_proto_rawDesc
)

func file_cltgen_option_proto_rawDescGZIP() []byte {
	file_cltgen_option_proto_rawDescOnce.Do(func() {
		file_cltgen_option_proto_rawDescData = protoimpl.X.CompressGZIP(file_cltgen_option_proto_rawDescData)
	})
	return file_cltgen_option_proto_rawDescData
}

var file_cltgen_option_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cltgen_option_proto_goTypes = []interface{}{
	(RandAccessMode)(0),                   // 0: cltgen.RandAccessMode
	(*descriptorpb.MessageOptions)(nil),   // 1: google.protobuf.MessageOptions
	(*descriptorpb.EnumOptions)(nil),      // 2: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 3: google.protobuf.EnumValueOptions
}
var file_cltgen_option_proto_depIdxs = []int32{
	1,  // 0: cltgen.pk:extendee -> google.protobuf.MessageOptions
	1,  // 1: cltgen.index:extendee -> google.protobuf.MessageOptions
	1,  // 2: cltgen.random_access:extendee -> google.protobuf.MessageOptions
	1,  // 3: cltgen.gen_default:extendee -> google.protobuf.MessageOptions
	1,  // 4: cltgen.gamecore_cpp2cs:extendee -> google.protobuf.MessageOptions
	1,  // 5: cltgen.gamecore_type:extendee -> google.protobuf.MessageOptions
	1,  // 6: cltgen.csharp_type:extendee -> google.protobuf.MessageOptions
	1,  // 7: cltgen.system_databin:extendee -> google.protobuf.MessageOptions
	1,  // 8: cltgen.gamecore_databin:extendee -> google.protobuf.MessageOptions
	1,  // 9: cltgen.cpp2cs_transfer:extendee -> google.protobuf.MessageOptions
	2,  // 10: cltgen.gamecore_enum:extendee -> google.protobuf.EnumOptions
	2,  // 11: cltgen.csharp_enum:extendee -> google.protobuf.EnumOptions
	2,  // 12: cltgen.flags:extendee -> google.protobuf.EnumOptions
	2,  // 13: cltgen.bp_export:extendee -> google.protobuf.EnumOptions
	2,  // 14: cltgen.uninode_enum:extendee -> google.protobuf.EnumOptions
	3,  // 15: cltgen.uninode_enum_alias:extendee -> google.protobuf.EnumValueOptions
	0,  // 16: cltgen.random_access:type_name -> cltgen.RandAccessMode
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	16, // [16:17] is the sub-list for extension type_name
	0,  // [0:16] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_cltgen_option_proto_init() }
func file_cltgen_option_proto_init() {
	if File_cltgen_option_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cltgen_option_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 16,
			NumServices:   0,
		},
		GoTypes:           file_cltgen_option_proto_goTypes,
		DependencyIndexes: file_cltgen_option_proto_depIdxs,
		EnumInfos:         file_cltgen_option_proto_enumTypes,
		ExtensionInfos:    file_cltgen_option_proto_extTypes,
	}.Build()
	File_cltgen_option_proto = out.File
	file_cltgen_option_proto_rawDesc = nil
	file_cltgen_option_proto_goTypes = nil
	file_cltgen_option_proto_depIdxs = nil
}
