// THIS FILE IS AUTOMATIC GENERATED BY REFLECT TOOL
// DO NOT MODIFY THIS FILE MANUALLY

syntax = "proto3";
package ResData;
import "bingogen.option.proto";
import "resdata.option.proto";
import "cltgen.option.proto";
import "os_res_enum_legacy.proto";
option go_package = "osserver/proto/resdata";

message ResDT_Common_KeyValue {
    uint32 Type         = 1 [ (resdata.cname) = "类型" ];
    repeated uint32 Arg = 2 [ (resdata.cname) = "参数", (resdata.count) = "3" ];
}

message ResDT_RewardItem {
    uint32 ItemType = 1 [ (resdata.cname) = "类型" ];
    uint32 ItemId   = 2 [ (resdata.cname) = "ID" ];
    uint32 ItemNum  = 3 [ (resdata.cname) = "数量" ];
}

message ResGuideTipInfo {
    int32 CfgID       = 1 [ (resdata.cname) = "序号" ];
    string ImagePath  = 2 [ (resdata.cname) = "头像路径" ];
    string TipIcon    = 3 [ (resdata.cname) = "提示图标路径" ];
    string TipTitle   = 4 [ (resdata.cname) = "名字" ];
    string TipContent = 5 [ (resdata.cname) = "内容" ];
    uint32 TipPos     = 6 [ (resdata.cname) = "提示位置" ];
    string TipVoice   = 7 [ (resdata.cname) = "语音事件" ];
}

message ResDT_IntParamArrayNode { int32 Param = 1 [ (resdata.cname) = "" ]; }

message ResDT_JumpForm {
    string GetWayDesc     = 1 [ (resdata.cname) = "获取方式描述" ];
    int32 JumpEntry       = 2 [ (resdata.cname) = "跳转入口" ];
    int32 JumpParam1      = 3 [ (resdata.cname) = "跳转参数1(数字)" ];
    int32 JumpParam2      = 4 [ (resdata.cname) = "跳转参数2(数字)" ];
    string JumpUrl        = 5 [ (resdata.cname) = "跳转地址(可配url)" ];
    string JumpOnTimeStr  = 6 [ (resdata.cname) = "可跳转起始时间" ];
    string JumpOffTimeStr = 7 [ (resdata.cname) = "可跳转结束时间" ];
}

message ResDT_PveRewardShowInfo {
    uint32 RewardType = 1 [ (resdata.cname) = "类型" ];
    uint32 RewardID   = 2 [ (resdata.cname) = "ID" ];
    uint32 RewardCnt  = 3 [ (resdata.cname) = "数量" ];
}

message ResDT_MapBuff {
    uint32 ID             = 1 [ (resdata.cname) = "ID" ];
    uint32 Camp           = 2 [ (resdata.cname) = "生效阵营" ];
    uint32 HeroType       = 3 [ (resdata.cname) = "英雄定位" ];
    uint32 HeroDamageType = 4 [ (resdata.cname) = "英雄伤害类型" ];
    uint32 HeroAttackType = 5 [ (resdata.cname) = "英雄普攻类型" ];
}

// message ResDT_SkillInfo
// {
//     int32 SkillID = 1 [(resdata.cname) = "ID"];
//     int32 PassiveSkillID = 2 [(resdata.cname) = "PassiveID"];
//     uint32 UnlockStar = 3 [(resdata.cname) = "解锁星级"];
//     uint32 LinkedSkill = 4 [(resdata.cname) = "关联技能"];
//     uint32 IsUsableZeroLevel = 5 [(resdata.cname) = "技能0级可用"];
//     uint32 ForbidLevelUp = 6 [(resdata.cname) = "不可升级"];
//     uint32 SkillBeanID = 7 [(resdata.cname) = "豆ID"];
// }

message ResDT_CostInfo {
    uint32 CostType  = 1 [ (resdata.cname) = "货币类型" ];
    uint32 CostPrice = 2 [ (resdata.cname) = "价格" ];
}

message ResDT_PveReviveInfo {
    repeated ResDT_CostInfo ReviveCost = 1 [ (resdata.cname) = "消耗", (resdata.count) = "3" ];
    repeated uint32 ReviveBuff         = 2 [ (resdata.cname) = "BuffID", (resdata.count) = "3" ];
}

message ResLevelCfgInfo {
    option (cltgen.pk)                                = "CfgID";
    int32 CfgID                                       = 1 [ (resdata.cname) = "关卡ID", (bingogen.primary_key) = 1 ];
    int32 ChapterId                                   = 2 [ (resdata.cname) = "章节ID" ];
    uint32 LevelNo                                    = 3 [ (resdata.cname) = "关卡序号" ];
    uint32 LevelDifficulty                            = 4 [ (resdata.cname) = "关卡难度" ];
    uint32 ChallengeNum                               = 5 [ (resdata.cname) = "每日挑战次数" ];
    uint32 MaxAcntNum                                 = 6 [ (resdata.cname) = "玩家人数" ];
    string Name                                       = 7 [ (resdata.cname) = "关卡名" ];
    string DesignFileName                             = 8 [ (resdata.cname) = "策划关卡文件名" ];
    string ArtistFileName                             = 9 [ (resdata.cname) = "美术关卡文件名" ];
    int32 LevelType                                   = 10 [ (resdata.cname) = "关卡模式" ];
    string LevelIcon                                  = 11 [ (resdata.cname) = "关卡底图" ];
    uint32 SelfCampAIPlayerLevel                      = 12 [ (resdata.cname) = "己方电脑玩家等级" ];
    repeated uint32 SelfCampAIHeroID                  = 13 [ (resdata.cname) = "己方电脑英雄ID", (resdata.count) = "5" ];
    uint32 AIPlayerLevel                              = 14 [ (resdata.cname) = "敌方电脑玩家等级" ];
    repeated uint32 AIHeroID                          = 15 [ (resdata.cname) = "敌方电脑英雄ID", (resdata.count) = "5" ];
    int32 HeroNum                                     = 16 [ (resdata.cname) = "英雄数量" ];
    int32 HeroAIType                                  = 17 [ (resdata.cname) = "英雄AI方式" ];
    repeated ResDT_IntParamArrayNode StarDetail       = 18 [ (resdata.cname) = "星级条件", (resdata.count) = "3" ];
    int32 LoseCondition                               = 19 [ (resdata.cname) = "失败条件" ];
    uint32 DefaultActive                              = 20 [ (resdata.cname) = "默认激活" ];
    int32 ActivateLevelId                             = 21 [ (resdata.cname) = "通关后激活关卡ID" ];
    repeated ResDT_PveRewardShowInfo RewardShowDetail = 22 [ (resdata.cname) = "奖励展示", (resdata.count) = "5" ];
    repeated int32 RecommendLevel                     = 23 [ (resdata.cname) = "推荐等级", (resdata.count) = "4" ];
    repeated int32 RecommendPower                     = 24 [ (resdata.cname) = "推荐战力", (resdata.count) = "4" ];
    repeated int32 ServerCheckPower                   = 25 [ (resdata.cname) = "服务器检查战力", (resdata.count) = "4" ];
    uint32 HideMinimap                                = 26 [ (resdata.cname) = "是否显示缩略图" ];
    string ThumbnailPath                              = 27 [ (resdata.cname) = "缩略图路径" ];
    string MapPath                                    = 28 [ (resdata.cname) = "小地图路径" ];
    string BigMapPath                                 = 29 [ (resdata.cname) = "大地图路径" ];
    int32 MapWidth                                    = 30 [ (resdata.cname) = "逻辑地图宽度" ];
    int32 MapHeight                                   = 31 [ (resdata.cname) = "逻辑地图高度" ];
    int32 SmallMapWidth                               = 32 [ (resdata.cname) = "小地图宽度" ];
    int32 SmallMapHeight                              = 33 [ (resdata.cname) = "小地图高度" ];
    int32 BigMapWidth                                 = 34 [ (resdata.cname) = "大地图宽度" ];
    int32 BigMapHeight                                = 35 [ (resdata.cname) = "大地图高度" ];
    int32 UseNavHeightLimit                           = 36 [ (resdata.cname) = "启用导航片高度限值" ];
    int32 PassDialogId                                = 37 [ (resdata.cname) = "通关剧情ID" ];
    int32 PreDialogId                                 = 38 [ (resdata.cname) = "入关剧情ID" ];
    int32 FailureDialogId                             = 39 [ (resdata.cname) = "失败剧情ID" ];
    uint32 EnterConsumeAP                             = 40 [ (resdata.cname) = "进入消耗体力" ];
    uint32 FinishConsumeAP                            = 41 [ (resdata.cname) = "完成消耗体力" ];
    uint32 BattleListID                               = 42 [ (resdata.cname) = "阵容ID" ];
    repeated uint32 SettleIDDetail                    = 43 [ (resdata.cname) = "结算ID", (resdata.count) = "4" ];
    uint32 SoulGrow                                   = 44 [ (resdata.cname) = "是否存在魂值成长" ];
    uint32 SoulAllocID                                = 45 [ (resdata.cname) = "魂值经验分配规则ID" ];
    uint32 AttackOrderID                              = 46 [ (resdata.cname) = "攻击顺序" ];
    uint32 ReviveTime                                 = 47 [ (resdata.cname) = "复活时间" ];
    uint32 DynamicPropertyCfg                         = 48 [ (resdata.cname) = "动态属性配置" ];
    string MusicStartEvent                            = 49 [ (resdata.cname) = "音乐开始" ];
    string MusicEndEvent                              = 50 [ (resdata.cname) = "音乐结束" ];
    string AmbientSoundEvent                          = 51 [ (resdata.cname) = "环境音" ];
    string BankResourceName                           = 52 [ (resdata.cname) = "Bank资源" ];
    uint32 HorizonMethod                              = 53 [ (resdata.cname) = "视野机制" ];
    uint32 ActorHorizonMethod                         = 54 [ (resdata.cname) = "角色视野机制" ];
    uint32 IsOpenAutoAI                               = 55 [ (resdata.cname) = "是否开启自动战斗" ];
    repeated ResDT_MapBuff MapBuffs                   = 56 [ (resdata.cname) = "地图BUFF", (resdata.count) = "4" ];
    string LevelDesc                                  = 57 [ (resdata.cname) = "关卡描述" ];
    repeated ResDT_PveReviveInfo ReviveInfo           = 58 [ (resdata.cname) = "复活难度", (resdata.count) = "4" ];
    uint32 ReviveTimeMax                              = 59 [ (resdata.cname) = "复活弹窗计时" ];
    int32 ExtraSkillId                                = 60 [ (resdata.cname) = "额外技能ID" ];
    int32 ExtraSkill2Id                               = 61 [ (resdata.cname) = "额外技能2ID" ];
    int32 ExtraSkill3Id                               = 62 [ (resdata.cname) = "额外技能3ID" ];
    uint32 ExtraSkillLogicSlot                        = 63 [ (resdata.cname) = "额外技能逻辑槽位" ];
    uint32 ExtraSkill2LogicSlot                       = 64 [ (resdata.cname) = "额外技能2逻辑槽位" ];
    uint32 ExtraSkill3LogicSlot                       = 65 [ (resdata.cname) = "额外技能3逻辑槽位" ];
    int32 ExtraPassiveSkillId                         = 66 [ (resdata.cname) = "额外被动技能ID" ];
    uint32 FinResultType                              = 67 [ (resdata.cname) = "结束页面类型" ];
    uint32 RandPickHero                               = 68 [ (resdata.cname) = "随机选将" ];
    uint32 SoulConfigId                               = 69 [ (resdata.cname) = "魂值基础配置ID" ];
    uint32 ShowTrainingHelper                         = 70 [ (resdata.cname) = "显示训练GM面板" ];
    uint32 GuideLevelSubType                          = 71 [ (resdata.cname) = "新手关子类型" ];
    uint32 SupportCameraDrag                          = 72 [ (resdata.cname) = "是否支持右摇杆拖拽" ];
    uint32 SceneBrightnessSetID                       = 73 [ (resdata.cname) = "地图亮度调节索引" ];
    int32 DyingMoveSpeed                              = 74 [ (resdata.cname) = "濒死移速" ];
    string HeroAILogicGraph                           = 75 [ (resdata.cname) = "英雄AI逻辑图" ];
}

message ResDT_UnUseSkill { repeated uint32 UnUseSkillList = 1 [ (resdata.cname) = "不可用召唤师技能ID", (resdata.count) = "5" ]; }

message DynamicAttributeInfo {
    option (cltgen.gamecore_type) = true;

    int32 BaseHP = 1 [ (resdata.cname) = "基础生命" ];
    int32 AD     = 2 [ (resdata.cname) = "攻击力" ];
    int32 AP     = 3 [ (resdata.cname) = "法术强度" ];
    int32 Def    = 4 [ (resdata.cname) = "护甲" ];
    int32 Res    = 5 [ (resdata.cname) = "抗性" ];
}

message ResDT_SkillDescription {
    string SkillDescType      = 1 [ (resdata.cname) = "类型" ];
    string SkillDescBaseValue = 2 [ (resdata.cname) = "基础值" ];
    string SkillDescGrowth    = 3 [ (resdata.cname) = "成长值" ];
    uint32 SkillDescValueType = 4 [ (resdata.cname) = "数值类型" ];
}

message ResSkillCfgInfo {
    option (cltgen.pk)            = "CfgID";
    option (cltgen.random_access) = Editor;

    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    int32 CfgID                 = 1 [ (resdata.cname) = "技能ID", (bingogen.primary_key) = 1 ];
    string SkillName            = 2 [ (resdata.cname) = "技能名称", (resdata.translate) = true ];
    string SkillDesc            = 3 [ (resdata.cname) = "技能描述", (resdata.translate) = true ];
    string SkillUpTip           = 4 [ (resdata.cname) = "技能升级提示", (resdata.translate) = true ];
    string IconPath             = 5 [ (resdata.cname) = "图标路径" ];
    string ModelPath            = 6 [ (resdata.cname) = "模型路径" ];
    int32 CoolDown              = 7 [ (resdata.cname) = "冷却时间" ];
    string Prefab               = 8 [ (resdata.cname) = "动作路径" ];
    int32 MaxAttackDistance     = 10 [ (resdata.cname) = "最大攻击距离" ];
    uint32 SkillTargetRule      = 11 [ (resdata.cname) = "技能筛选规则" ];
    int32 AttackSpeedAffectRate = 14 [ (resdata.cname) = "攻速影响比例" ];
    bool TriggerWhenControlled  = 20 [ (resdata.cname) = "允许受控时释放技能" ];
    string property             = 21 [ (resdata.cname) = "属性列" ];
    string param1               = 22 [ (resdata.cname) = "1星参数" ];
    string param2               = 23 [ (resdata.cname) = "2星参数" ];
    string param3               = 24 [ (resdata.cname) = "3星参数" ];
    string OutSkillDesc         = 25 [ (resdata.cname) = "局外描述列", (resdata.translate) = true ];
    string WorldViewShort       = 26 [ (resdata.cname) = "世界观短句", (resdata.translate) = true ];
}

message ResDT_SkillDynamicIndicatorActorStateInfo { repeated ResDT_IntParamArrayNode StateParam = 1 [ (resdata.cname) = "参数", (resdata.count) = "5" ]; }

message ResDT_SkillFunc {
    uint32 SkillFuncType                            = 1 [ (resdata.cname) = "类型" ];
    uint32 SkillFuncFreq                            = 2 [ (resdata.cname) = "作用周期" ];
    repeated ResDT_IntParamArrayNode SkillFuncParam = 3 [ (resdata.cname) = "参数", (resdata.count) = "18" ];
}

message ResDT_SkillPassiveCondition {
    uint32 ConditionType                            = 1 [ (resdata.cname) = "类型" ];
    repeated ResDT_IntParamArrayNode ConditionParam = 2 [ (resdata.cname) = "参数", (resdata.count) = "9" ];
}

message ResDT_ShowBuffType {
    int32 Type            = 1 [ (resdata.cname) = "类型", (resdata.bind) = "BUFF_SHOW_TYPE" ];
    repeated int32 Params = 2 [ (resdata.cname) = "参数", (resdata.count) = "2" ];
    int32 Priority        = 3 [ (resdata.cname) = "优先级" ];
}

message ResDT_SkillMarkLayerEffectName { string LayerEffectPath = 1 [ (resdata.cname) = "路径" ]; }

message ResSkillMarkCfgInfo {
    option (cltgen.pk)               = "CfgID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    int32 CfgID                                             = 1 [ (resdata.cname) = "技能印记ID", (bingogen.primary_key) = 1 ];
    int32 DependCfgID                                       = 2 [ (resdata.cname) = "前置技能印记ID" ];
    string MarkName                                         = 3 [ (resdata.cname) = "技能印记名称" ];
    string MarkDesc                                         = 4 [ (resdata.cname) = "技能印记描述" ];
    string ActionName                                       = 5 [ (resdata.cname) = "技能印记动作路径" ];
    int32 MaxLayer                                          = 6 [ (resdata.cname) = "技能印记最大层数" ];
    int32 CostLayer                                         = 7 [ (resdata.cname) = "技能印记消耗层数" ];
    int32 TriggerLayer                                      = 8 [ (resdata.cname) = "技能印记触发层数" ];
    int32 ImmuneTime                                        = 9 [ (resdata.cname) = "技能印记免疫时间" ];
    int32 LastMaxTime                                       = 10 [ (resdata.cname) = "技能印记持续时间" ];
    int32 AddMarkImmuneTime                                 = 11 [ (resdata.cname) = "印记触发后的免疫印记添加时间" ];
    uint32 AutoTrigger                                      = 12 [ (resdata.cname) = "技能印记自动触发" ];
    uint32 AutoTriggerOnDead                                = 13 [ (resdata.cname) = "死亡自动触发" ];
    uint32 EffectMask                                       = 14 [ (resdata.cname) = "印记特效目标筛选" ];
    repeated ResDT_SkillMarkLayerEffectName LayerEffectName = 15 [ (resdata.cname) = "印记特效", (resdata.count) = "12" ];
    int32 HostPlayerTriggerParticleSortingOrder             = 16 [ (resdata.cname) = "主控角色产生特效的层级" ];
    int32 BuffID                                            = 17 [ (resdata.cname) = "BuffID" ];
    int32 BuffTargetType                                    = 18 [ (resdata.cname) = "Buff目标" ];
}

message ResSkillPassiveCfgInfo {
    option (cltgen.pk)               = "CfgID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    int32 CfgID                                          = 1 [ (resdata.cname) = "被动技能ID", (bingogen.primary_key) = 1 ];
    int32 CoolDown                                       = 2 [ (resdata.cname) = "冷却时间" ];
    uint32 ShowAsElite                                   = 3 [ (resdata.cname) = "大血条显示效果" ];
    int32 SkillType                                      = 4 [ (resdata.cname) = "被动生效依赖技能" ];
    string PassiveName                                   = 5 [ (resdata.cname) = "被动技能名称" ];
    string PassiveDesc                                   = 6 [ (resdata.cname) = "被动技能描述" ];
    string ActionName                                    = 7 [ (resdata.cname) = "被动技能动作路径" ];
    uint32 PassiveEventType                              = 8 [ (resdata.cname) = "被动技能类型" ];
    int32 PassiveEventParam1                             = 9 [ (resdata.cname) = "被动技能类型参数1" ];
    int32 PassiveEventParam2                             = 10 [ (resdata.cname) = "被动技能类型参数2" ];
    int32 PassiveEventParam3                             = 11 [ (resdata.cname) = "被动技能类型参数3" ];
    int32 PassiveEventParam4                             = 12 [ (resdata.cname) = "被动技能类型参数4" ];
    int32 PassiveEventParam5                             = 13 [ (resdata.cname) = "被动技能类型参数5" ];
    int32 PassiveEventParam6                             = 14 [ (resdata.cname) = "被动技能类型参数6" ];
    int32 PassiveEventParam7                             = 15 [ (resdata.cname) = "被动技能类型参数7" ];
    uint32 PassiveConditonMode                           = 16 [ (resdata.cname) = "被动技能条件逻辑" ];
    repeated ResDT_SkillPassiveCondition PassiveConditon = 17 [ (resdata.cname) = "被动技能条件", (resdata.count) = "2" ];
    uint32 PassiveExposing                               = 19 [ (resdata.cname) = "被动技能暴露视野" ];
    uint32 NotResetCondition                             = 20 [ (resdata.cname) = "不重置条件" ];
    string PassiveAffix                                  = 21 [ (resdata.cname) = "词缀描述" ];
    uint32 BindSkinID                                    = 22 [ (resdata.cname) = "绑定皮肤ID" ];
    uint32 TogetherUpdateGroupID                         = 23 [ (resdata.cname) = "同频率更新组ID" ];
    bool DisplayCoolDown                                 = 24 [ (resdata.cname) = "显示冷却进度" ];
}

message ResRandomSkillPassiveRule {
    option (cltgen.pk)                                     = "RandomSkillPassiveKey";
    int32 RandomSkillPassiveKey                            = 1 [ (resdata.cname) = "怪物被动规则KEY", (bingogen.primary_key) = 1 ];
    repeated ResDT_IntParamArrayNode RandomSkillPassiveID1 = 2 [ (resdata.cname) = "怪物被动ID", (resdata.count) = "20" ];
    repeated ResDT_IntParamArrayNode RandomSkillPassiveID2 = 3 [ (resdata.cname) = "怪物被动2ID", (resdata.count) = "20" ];
}

message ResSkillCombineCfgInfo {
    option (cltgen.pk)               = "CfgID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    int32 CfgID                            = 1 [ (resdata.cname) = "效果组合ID", (bingogen.primary_key) = 1 ];
    uint32 PermanentBuffType               = 2 [ (resdata.cname) = "跨回合永久buff类型" ];
    int32 TriggerRate                      = 3 [ (resdata.cname) = "触发几率" ];
    int32 CroupID                          = 4 [ (resdata.cname) = "功能组ID" ];
    uint32 ClearRule                       = 6 [ (resdata.cname) = "清除规则", (resdata.bind) = "RES_SKILLFUNC_CLEAR_RULE" ];
    uint32 OverlayRule                     = 7 [ (resdata.cname) = "叠加规则", (resdata.bind) = "RES_SKILLFUNC_OVERLAY_RULE" ];
    uint32 OverlayMax                      = 8 [ (resdata.cname) = "叠加次数上限" ];
    int32 EffectType                       = 9 [ (resdata.cname) = "效果类型", (resdata.bind) = "BUFF_EFFECT_TYPE" ];
    uint32 ControlEffectType               = 11 [ (resdata.cname) = "控制类型" ];
    uint32 ShowType                        = 12 [ (resdata.cname) = "显示类型", (resdata.bind) = "RESTRICT_TYPE" ];
    string Prefab                          = 16 [ (resdata.cname) = "动作路径" ];
    int32 Duration                         = 17 [ (resdata.cname) = "持续时长" ];
    uint32 ChangeDurationProperty          = 18 [ (resdata.cname) = "影响持续时间属性" ];
    int32 ChangeDurationPropertyRate       = 19 [ (resdata.cname) = "每一点额外属性值增加持续时间万分之N毫秒" ];
    repeated ResDT_SkillFunc SkillFuncInfo = 20 [ (resdata.cname) = "效果", (resdata.count) = "4" ];
    int32 ExtraEffectSlotType              = 24 [ (resdata.cname) = "法球效果槽位" ];
    uint32 takeEffectCountMax              = 25 [ (resdata.cname) = "全局生效次数上限" ];
    int32 EffectSubTypeMask                = 29 [ (resdata.cname) = "效果子类型掩码", (resdata.bind) = "BUFF_SUB_EFFECT_TYPE_MASK" ];
    int32 ImmunityDamageMask               = 30 [ (resdata.cname) = "效果子类型免疫伤害掩码" ];
    ResDT_ShowBuffType ShowBuffType        = 31 [ (resdata.cname) = "开启UI显示" ];
    bool OverlayNotRelatedSource           = 32 [ (resdata.cname) = "叠加次数不区分来源" ];
}

// message ResKillActionInfo {
//     option (cltgen.pk)               = "CfgID";
//     option (cltgen.gamecore_databin) = true;

//     int32 CfgID           = 1 [ (resdata.cname) = "类型ID", (bingogen.primary_key) = 1 ];
//     int32 EffectID        = 2 [ (resdata.cname) = "技能效果ID" ];
//     int32 OffsetAngle     = 3 [ (resdata.cname) = "偏移角度" ];
//     uint32 MoveType       = 4 [ (resdata.cname) = "动作类型" ];
//     repeated int32 Params = 5 [ (resdata.cname) = "类型参数", (resdata.count) = "3" ];
// }

message ResBuffRmvInfo {
    option (cltgen.pk)        = "CfgID";
    int32 CfgID               = 1 [ (resdata.cname) = "削减规则ID", (bingogen.primary_key) = 1 ];
    int32 RmvLayer            = 2 [ (resdata.cname) = "时间结束削减层数" ];
    int32 NewLayerLengthRatio = 3 [ (resdata.cname) = "后续BUFF时间万分比" ];
}

message ResGlobalInfo {
    option (cltgen.pk)               = "ConfType";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 ConfType  = 1 [ (resdata.cname) = "配置项名称", (bingogen.primary_key) = 1, (resdata.bind) = "RES_GLOBAL_CONF_TYPE" ];
    uint32 ConfValue = 2 [ (resdata.cname) = "配置项值" ];
}

message ResBattleGlobalTxtInfo {
    option (cltgen.pk)               = "TxtConfType";
    option (cltgen.gamecore_databin) = true;

    uint32 TxtConfType = 1 [ (resdata.cname) = "文本配置项名称", (bingogen.primary_key) = 1 ];
    string TextVal     = 2 [ (resdata.cname) = "文本配置项内容" ];
}

message ResDT_ItemSrc_Info {
    uint32 Type = 1 [ (resdata.cname) = "类型" ];
    uint32 ID   = 2 [ (resdata.cname) = "ID" ];
}

message ResDT_FuncEft_Obj {
    uint32 Type    = 1 [ (resdata.cname) = "" ];
    uint32 ValType = 2 [ (resdata.cname) = "值类型" ];
    int32 Value    = 3 [ (resdata.cname) = "值" ];
}

message ResSymbolInfo {
    option (cltgen.pk)                     = "ID";
    uint32 ID                              = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    string Name                            = 2 [ (resdata.cname) = "名称" ];
    string Desc                            = 3 [ (resdata.cname) = "描述" ];
    uint32 Icon                            = 4 [ (resdata.cname) = "icon" ];
    uint32 CommonIcon                      = 5 [ (resdata.cname) = "通用icon" ];
    uint32 Level                           = 6 [ (resdata.cname) = "等级" ];
    uint32 Color                           = 7 [ (resdata.cname) = "色系" ];
    uint32 IsShow                          = 8 [ (resdata.cname) = "是否可用显示" ];
    uint32 Type                            = 9 [ (resdata.cname) = "符文类别" ];
    int32 OverLimit                        = 10 [ (resdata.cname) = "堆叠上限" ];
    uint32 CoinBuy                         = 11 [ (resdata.cname) = "金币购买价格" ];
    uint32 CouponsBuy                      = 12 [ (resdata.cname) = "点券购买价格" ];
    uint32 PVPCoinBuy                      = 13 [ (resdata.cname) = "PVP币购买价格" ];
    uint32 BurningCoinBuy                  = 14 [ (resdata.cname) = "远征币购买价格" ];
    uint32 ArenaCoinBuy                    = 15 [ (resdata.cname) = "竞技币购买价格" ];
    uint32 GuildCoinBuy                    = 16 [ (resdata.cname) = "帮贡购买价格" ];
    uint32 DiamondBuy                      = 17 [ (resdata.cname) = "钻石购买价格" ];
    uint32 IsBuyMixPay                     = 18 [ (resdata.cname) = "是否支持混合支付" ];
    int32 CombatEft                        = 19 [ (resdata.cname) = "战斗力" ];
    uint32 GuildFacLv                      = 20 [ (resdata.cname) = "工坊等级" ];
    uint32 GuildHisConstruct               = 21 [ (resdata.cname) = "历史帮贡要求" ];
    uint32 GuildConstruct                  = 22 [ (resdata.cname) = "帮贡消耗" ];
    string DisplayName                     = 23 [ (resdata.cname) = "显示名称" ];
    uint32 LvlUpCoin                       = 24 [ (resdata.cname) = "升级所需铭文碎片" ];
    uint32 BreakCoin                       = 25 [ (resdata.cname) = "分解可得铭文碎片" ];
    uint32 InitSymbolID                    = 26 [ (resdata.cname) = "对应1级铭文ID" ];
    uint32 ResetCoin                       = 27 [ (resdata.cname) = "重置可得铭文碎片" ];
    uint32 NeedResetPswd                   = 28 [ (resdata.cname) = "重置是否需要二级密码" ];
    string InitOnTimeStr                   = 29 [ (resdata.cname) = "上架时间" ];
    uint32 InitCnt                         = 30 [ (resdata.cname) = "初始铭文数量" ];
    repeated ResDT_FuncEft_Obj FuncEftList = 31 [ (resdata.cname) = "铭文属性", (resdata.count) = "3" ];
    repeated ResDT_FuncEft_Obj PveEftList  = 32 [ (resdata.cname) = "PVE铭文属性", (resdata.count) = "8" ];
    repeated ResDT_ItemSrc_Info SrcInfo    = 33 [ (resdata.cname) = "来源", (resdata.count) = "10" ];
}

message ResDT_ConditionInfo {
    uint32 Type                     = 1 [ (resdata.cname) = "类型" ];
    repeated int32 KeyDetail        = 2 [ (resdata.cname) = "键", (resdata.count) = "4" ];
    repeated int32 ComparetorDetail = 3 [ (resdata.cname) = "比较符", (resdata.count) = "2" ];
    repeated int32 ValueDetail      = 4 [ (resdata.cname) = "数值限制", (resdata.count) = "2" ];
}

message ResEvaluateStarInfo {
    option (cltgen.pk)                      = "CondID";
    uint32 CondID                           = 1 [ (resdata.cname) = "星级评价ID", (bingogen.primary_key) = 1 ];
    string CondDesc                         = 2 [ (resdata.cname) = "星级评价描述" ];
    uint32 LogicType                        = 3 [ (resdata.cname) = "条件关系" ];
    uint32 HideDetail                       = 4 [ (resdata.cname) = "是否隐藏数量提示" ];
    repeated ResDT_ConditionInfo Conditions = 5 [ (resdata.cname) = "条件", (resdata.count) = "3" ];
}

message ResDT_CompensateInfo {
    uint32 LevelDiff = 1 [ (resdata.cname) = "等级差差距" ];
    uint32 ExtraRate = 2 [ (resdata.cname) = "万分比" ];
}

message ResDT_PickRuleInfo {
    uint32 PickType       = 1 [ (resdata.cname) = "模式" ];
    repeated uint32 Param = 2 [ (resdata.cname) = "补充参数", (resdata.count) = "4" ];
    uint32 AllowSwapHero  = 3 [ (resdata.cname) = "是否允许交换英雄" ];
}

message ResRenderCullingExclude {
    option (cltgen.pk)      = "ID";
    uint32 ID               = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    string ExludePrefabPath = 2 [ (resdata.cname) = "Prefab路径" ];
}

message ResDT_TeamRangeRule {
    uint32 RuleType           = 1 [ (resdata.cname) = "类型" ];
    repeated uint32 RuleParam = 2 [ (resdata.cname) = "参数", (resdata.count) = "3" ];
}

message ResTextData {
    uint32 Tag     = 1 [ (resdata.cname) = "TAG" ];
    string Content = 2 [ (resdata.cname) = "内容" ];
}

message ResRankGradeConf {
    uint32 Grade                                  = 1 [ (resdata.cname) = "表现段位" ];
    uint32 LogicGrade                             = 2 [ (resdata.cname) = "逻辑段位" ];
    uint32 IsUsed                                 = 3 [ (resdata.cname) = "是否生效" ];
    string GradeDesc                              = 4 [ (resdata.cname) = "级别" ];
    string GradeLevelDesc                         = 5 [ (resdata.cname) = "段位级别" ];
    uint32 GradeLevel                             = 6 [ (resdata.cname) = "小段位" ];
    int32 GradeUpNeedFightCnt                     = 7 [ (resdata.cname) = "晋级比赛场次" ];
    int32 GradeUpNeedWinCnt                       = 8 [ (resdata.cname) = "晋级需要胜利场次" ];
    uint32 GradeUpNeedScore                       = 9 [ (resdata.cname) = "晋级需要胜点" ];
    uint32 ProtectGradeScore                      = 10 [ (resdata.cname) = "保级需要积分" ];
    uint32 EqualizeScore                          = 11 [ (resdata.cname) = "补偿积分" ];
    uint32 LosePerformanceMaxScore                = 12 [ (resdata.cname) = "败方表现分上限" ];
    string GradePicturePath                       = 13 [ (resdata.cname) = "段位图片路径" ];
    string GradePicturePathSuperMaster            = 14 [ (resdata.cname) = "超凡大师段位图片路径" ];
    string GradeSmallPicPath                      = 15 [ (resdata.cname) = "段位底部图片路径" ];
    string GradeSmallPicPathSuperMaster           = 16 [ (resdata.cname) = "超凡大师段位底部图片路径" ];
    string GradeFramePicPath                      = 17 [ (resdata.cname) = "段位边框图片路径" ];
    string GradeFramePicPathSuperMaster           = 18 [ (resdata.cname) = "超凡大师段位边框图片路径" ];
    string GradeParticleBg                        = 19 [ (resdata.cname) = "段位特效背景" ];
    string GradeParticleBgSuperMaster             = 20 [ (resdata.cname) = "超凡大师段位特效背景" ];
    int32 TRankAdjustMMR                          = 21 [ (resdata.cname) = "排位赛加成MMR值" ];
    uint32 GuildSignInPoint                       = 22 [ (resdata.cname) = "战队签到活跃点" ];
    int32 MultiMatchMMRAdjustValue                = 23 [ (resdata.cname) = "组队匹配MMR加成值" ];
    int32 BaseMMR                                 = 24 [ (resdata.cname) = "段位基础MMR值" ];
    uint32 ConWinCnt                              = 25 [ (resdata.cname) = "额外加星需要连胜场次" ];
    uint32 BelongBigGrade                         = 26 [ (resdata.cname) = "所属大段位" ];
    string BigGradeName                           = 27 [ (resdata.cname) = "大段位名称" ];
    string RewardDesc                             = 28 [ (resdata.cname) = "奖励描述" ];
    string RewardDescExp                          = 29 [ (resdata.cname) = "奖励描述体验服" ];
    uint32 NormalMMRAddValue                      = 30 [ (resdata.cname) = "匹配MMR加成分" ];
    uint32 AddStarScore                           = 31 [ (resdata.cname) = "老兵积分上限" ];
    repeated uint32 ConWinScore                   = 32 [ (resdata.cname) = "老兵连胜积分", (resdata.count) = "10" ];
    repeated uint32 ConLossScore                  = 33 [ (resdata.cname) = "老兵连败积分", (resdata.count) = "10" ];
    repeated uint32 MVPScore                      = 34 [ (resdata.cname) = "MVP加成积分", (resdata.count) = "10" ];
    uint32 GoldMedalScore                         = 35 [ (resdata.cname) = "金牌加成积分" ];
    uint32 SilverMedalScore                       = 36 [ (resdata.cname) = "银牌加成积分" ];
    int32 GuildMatchScoreAddRate                  = 37 [ (resdata.cname) = "战队赛积分加成系数" ];
    int32 GameComplaintXiaojiDel                  = 38 [ (resdata.cname) = "游戏系统举报消极比赛扣分" ];
    int32 GameSettleXiaojiDel                     = 39 [ (resdata.cname) = "游戏系统结算消极比赛扣分" ];
    int32 ComplaintSysSongDel                     = 40 [ (resdata.cname) = "审判系统送人头扣分" ];
    int32 ComplaintSysGuajiDel                    = 41 [ (resdata.cname) = "审判系统挂机扣分" ];
    int32 MatchLogParam                           = 42 [ (resdata.cname) = "二级匹配log权重系数" ];
    int32 BackflowPlayerWarmBattle                = 43 [ (resdata.cname) = "回流玩家首次单排触发温暖局" ];
    int32 RankELO                                 = 44 [ (resdata.cname) = "对应实力分" ];
    int32 MultiMatchELOAdjustValue                = 45 [ (resdata.cname) = "组队匹配ELO加成值" ];
    int32 GameGuajiDelAddRate                     = 46 [ (resdata.cname) = "游戏系统挂机扣分加成比例" ];
    int32 UnconfirmDelCredit                      = 47 [ (resdata.cname) = "未确认游戏扣的信誉分" ];
    int32 OutGameDelCredit                        = 48 [ (resdata.cname) = "顶号扣的信誉分" ];
    int32 AIRankAttackRate                        = 49 [ (resdata.cname) = "AI攻击力比例" ];
    int32 WarmBattleAIElo                         = 50 [ (resdata.cname) = "温暖局对手Elo分" ];
    int32 MMRCommonAlgorithmPoint                 = 51 [ (resdata.cname) = "MMR通用算法加成分" ];
    uint32 IsFullScoreBigGradeUp                  = 52 [ (resdata.cname) = "满星是否大段位晋级赛" ];
    uint32 IsFullScoreSmallGradeUp                = 53 [ (resdata.cname) = "满星是否小段位晋级赛" ];
    uint32 GradeUpWinRewardBraveScore             = 54 [ (resdata.cname) = "晋级赛胜利奖励勇者积分" ];
    uint32 GradeUpLosePerformWellBraveScore       = 55 [ (resdata.cname) = "晋级赛失败表现优秀补偿勇者积分" ];
    uint32 GradeUpLosePerformGoodBraveScore       = 56 [ (resdata.cname) = "晋级赛失败表现良好补偿勇者积分" ];
    uint32 GradeUpLoseTeammateViolationBraveScore = 57 [ (resdata.cname) = "晋级赛失败队友违规补偿勇者积分" ];
    uint32 HangupCompensateID                     = 58 [ (resdata.cname) = "挂机补偿ID" ];
    uint32 OffLineHostAIGradeLv                   = 59 [ (resdata.cname) = "离线AI小段位等级" ];
}

message ResDT_AllocRuleParam {
    uint32 MemberChooseType = 1 [ (resdata.cname) = "筛选" ];
    uint32 DivideType       = 2 [ (resdata.cname) = "收益方式" ];
    int32 RangeRadius       = 3 [ (resdata.cname) = "筛选半径" ];
    int32 IncomeRate        = 4 [ (resdata.cname) = "收益比" ];
    uint32 DeadAddIncome    = 5 [ (resdata.cname) = "死亡是否增加收益" ];
}

message ResDT_IncomeAttackRule {
    uint32 AttakerType                            = 1 [ (resdata.cname) = "击杀者类型" ];
    repeated ResDT_AllocRuleParam IncomeMemberArr = 2 [ (resdata.cname) = "分配方式", (resdata.count) = "5" ];
}

message ResSoulAddition {
    option (cltgen.pk)            = "ID";
    uint32 ID                     = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    int32 HeroKillType            = 2 [ (resdata.cname) = "英雄状态" ];
    int32 ExpAddRate              = 3 [ (resdata.cname) = "经验BUFF" ];
    int32 GoldCoinInBattleAddRate = 4 [ (resdata.cname) = "人头金币BUFF" ];
    uint32 GoldRewardValue        = 5 [ (resdata.cname) = "奖金包金币数量" ];
    int32 KillTargetState         = 6 [ (resdata.cname) = "获得一次击杀后英雄状态" ];
    int32 AssitTargetState        = 7 [ (resdata.cname) = "获得一次助攻后英雄状态" ];
    int32 DeathTargetState        = 8 [ (resdata.cname) = "获得一次死亡后英雄状态" ];
}

message HeroJobFeature { string JobFeature = 1 [ (resdata.cname) = "" ]; }

message ResHeroCampBuff {
    option (cltgen.pk)      = "HeroRelationID";
    uint32 HeroRelationID   = 1 [ (resdata.cname) = "羁绊关系ID", (bingogen.primary_key) = 1 ];
    uint32 BuffRelationType = 2 [ (resdata.cname) = "羁绊类型" ];
    uint32 RelatedHero      = 3 [ (resdata.cname) = "羁绊英雄" ];
    int32 BuffID            = 4 [ (resdata.cname) = "产生buffID" ];
    int32 MinNumForTrigger  = 5 [ (resdata.cname) = "最少触发人数" ];
}

message ResDT_EnergyState {
    uint32 Type    = 1 [ (resdata.cname) = "类型" ];
    string ResName = 2 [ (resdata.cname) = "能量条资源名" ];
}

message ResHeroJobBuff {
    uint32 GroupID                  = 1 [ (resdata.cname) = "Buff组ID" ];
    uint32 JobType                  = 2 [ (resdata.cname) = "英雄职业类型" ];
    repeated ResDT_FuncEft_Obj Attr = 3 [ (resdata.cname) = "职业Buff属性", (resdata.count) = "3" ];
    repeated int32 BuffId           = 4 [ (resdata.cname) = "职业BuffID", (resdata.count) = "2" ];
    string SelfCampTipAgePath       = 5 [ (resdata.cname) = "我方提示age路径" ];
    string EnemyCampTipAgePath      = 6 [ (resdata.cname) = "敌方提示age路径" ];
    int32 TipsBuffId                = 7 [ (resdata.cname) = "提示BuffID" ];
}

message ResHeroBuff {
    uint32 GroupID                  = 1 [ (resdata.cname) = "单英雄Buff组ID" ];
    int32 HeroID                    = 2 [ (resdata.cname) = "英雄ID" ];
    repeated ResDT_FuncEft_Obj Attr = 3 [ (resdata.cname) = "职业Buff属性", (resdata.count) = "3" ];
    repeated int32 BuffId           = 4 [ (resdata.cname) = "职业BuffID", (resdata.count) = "2" ];
    string SelfCampTipAgePath       = 5 [ (resdata.cname) = "我方提示age路径" ];
    string EnemyCampTipAgePath      = 6 [ (resdata.cname) = "敌方提示age路径" ];
}

message ResDT_RegisterSale_Info {
    uint32 IsValid      = 1 [ (resdata.cname) = "是否起效" ];
    string StartTimeStr = 2 [ (resdata.cname) = "开始时间" ];
    uint32 ValidTime    = 3 [ (resdata.cname) = "有效时长" ];
    uint32 BuyCoupons   = 4 [ (resdata.cname) = "点券购买价格" ];
    uint32 BuyCoin      = 5 [ (resdata.cname) = "金币购买价格" ];
    uint32 BuyDiamond   = 6 [ (resdata.cname) = "钻石购买价格" ];
    uint32 BuyItemCnt   = 7 [ (resdata.cname) = "兑换券购买价格" ];
    uint32 SortID       = 8 [ (resdata.cname) = "排序ID" ];
}

message ResDT_SkinFeature {
    string IconPath = 1 [ (resdata.cname) = "图片" ];
    string Flag     = 2 [ (resdata.cname) = "标签" ];
    string Desc     = 3 [ (resdata.cname) = "描述" ];
}

message ResDT_SkinVoice {
    string SkinSoundResPack          = 1 [ (resdata.cname) = "皮肤音效资源包名前缀" ];
    uint32 SoundSwitchEvent          = 2 [ (resdata.cname) = "皮肤音效配置" ];
    string SkinSoundPostfix          = 3 [ (resdata.cname) = "皮肤音效事件后缀" ];
    string LobbySoundBankResPack     = 4 [ (resdata.cname) = "大厅展示音效资源" ];
    string PortalSoundPostfix        = 5 [ (resdata.cname) = "回城音效后缀" ];
    string LobbyHeroTalkSoundResPack = 6 [ (resdata.cname) = "英雄对话音效资源包名" ];
}

message ResClashAddition {
    uint32 AttackerMark   = 1 [ (resdata.cname) = "攻击者标识" ];
    uint32 SuffererMark   = 2 [ (resdata.cname) = "受击者标识" ];
    uint32 DamageAddition = 3 [ (resdata.cname) = "伤害加成" ];
    uint32 DynamicConfig  = 4 [ (resdata.cname) = "动态调整" ];
}

message ResPropertyValueInfo {
    option (cltgen.pk)               = "PropertyType";
    option (cltgen.gamecore_databin) = true;

    uint32 PropertyType = 1 [ (resdata.cname) = "属性类型", (bingogen.primary_key) = 1 ];
    int32 UpperLimitValue = 2 [ (resdata.cname) = "属性上限" ];
}

message ResBattleFloatText {
    option (cltgen.pk)             = "ID";
    option (cltgen.system_databin) = true;

    uint32 ID                 = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    string Text               = 2 [ (resdata.cname) = "文本", (resdata.translate) = true ];
    uint32 fontsize           = 3 [ (resdata.cname) = "字号" ];
    string animation          = 4 [ (resdata.cname) = "动画" ];
    uint32 lifeTime           = 5 [ (resdata.cname) = "显示时长" ];
    uint32 floatThresholdTime = 6 [ (resdata.cname) = "相同目标飘字间隔时长" ];
}

message ResDT_DigitFloatInterval {
    int32 threshold = 1 [ (resdata.cname) = "阈值" ];
    float scale     = 2 [ (resdata.cname) = "缩放" ];
    float textSize  = 3 [ (resdata.cname) = "字号" ];
    float offsetX   = 4 [ (resdata.cname) = "偏移x" ];
    float offsetY   = 5 [ (resdata.cname) = "偏移y" ];
}

message ResDigitFloatTextCfgInfo {
    option (cltgen.pk)             = "ID";
    option (cltgen.system_databin) = true;

    uint32 ID                                   = 1 [ (resdata.cname) = "类型ID", (bingogen.primary_key) = 1 ];
    string AnimName                             = 2 [ (resdata.cname) = "动画名" ];
    uint32 lifeTime                             = 3 [ (resdata.cname) = "显示时长" ];
    int32 LR                                    = 4 [ (resdata.cname) = "区分左右" ];
    int32 ShowSign                              = 5 [ (resdata.cname) = "显示正负号" ];
    string PostFix                              = 6 [ (resdata.cname) = "后缀" ];
    float iconOffset1                           = 7 [ (resdata.cname) = "icon偏移1" ];
    float iconOffset2                           = 8 [ (resdata.cname) = "icon偏移2" ];
    repeated ResDT_DigitFloatInterval Intervals = 9 [ (resdata.cname) = "区间", (resdata.count) = "10" ];
}

message ResAiParamConf {
    uint32 Id   = 1 [ (resdata.cname) = "ID" ];
    int32 Param = 2 [ (resdata.cname) = "参数" ];
}

message ResSpeedAdjustRangeConfig {
    uint32 Valid       = 1 [ (resdata.cname) = "是否有效" ];
    int32 MinValue     = 2 [ (resdata.cname) = "最小值" ];
    int32 MaxValue     = 3 [ (resdata.cname) = "最大值" ];
    uint32 Attenuation = 4 [ (resdata.cname) = "衰减" ];
}

message ResSpeedAdjustConfig {
    option (cltgen.pk)               = "Type";
    option (cltgen.gamecore_databin) = true;

    uint32 Type                                     = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 Valid                                    = 2 [ (resdata.cname) = "是否生效" ];
    uint32 ReferenceBaseSpeed                       = 3 [ (resdata.cname) = "考虑基础速度" ];
    uint32 StepAdjust                               = 4 [ (resdata.cname) = "分段累计" ];
    repeated ResSpeedAdjustRangeConfig RangeConfigs = 5 [ (resdata.cname) = "分段", (resdata.count) = "8" ];
}

message ResBattleRoyaleParamByMMR {
    uint32 Grade           = 1 [ (resdata.cname) = "段位" ];
    uint32 BigGrade        = 2 [ (resdata.cname) = "大段位" ];
    string BigGradeName    = 3 [ (resdata.cname) = "大段位名称" ];
    uint32 StarCon         = 4 [ (resdata.cname) = "星级" ];
    string GradeName       = 5 [ (resdata.cname) = "段位名称" ];
    int32 MMR              = 6 [ (resdata.cname) = "MMR" ];
    int32 GradeAdjustPoint = 7 [ (resdata.cname) = "修正分" ];
    int32 AddParam         = 8 [ (resdata.cname) = "加分系数" ];
    int32 MinusParam       = 9 [ (resdata.cname) = "减分系数" ];
    int32 DropGrade        = 10 [ (resdata.cname) = "是否掉段位" ];
    uint32 RankShowGrade   = 11 [ (resdata.cname) = "对应排位赛表现段位" ];
}

message ResAIReuseParams {
    uint32 ID            = 1 [ (resdata.cname) = "ID" ];
    uint32 LevelID       = 2 [ (resdata.cname) = "关卡ID" ];
    uint32 Time          = 3 [ (resdata.cname) = "时间" ];
    uint32 Epx           = 4 [ (resdata.cname) = "经验" ];
    uint32 Money         = 5 [ (resdata.cname) = "经济" ];
    uint32 Level         = 6 [ (resdata.cname) = "预期等级" ];
    uint32 EquipRate     = 7 [ (resdata.cname) = "装备概率" ];
    string EquipList     = 8 [ (resdata.cname) = "装备ID列表" ];
    uint32 LeftHeroNum_1 = 9 [ (resdata.cname) = "场上留存人数1人组队" ];
    uint32 LeftHeroNum_2 = 10 [ (resdata.cname) = "场上留存人数2人组队" ];
    uint32 LeftHeroNum_3 = 11 [ (resdata.cname) = "场上留存人数3人组队" ];
    uint32 LeftHeroNum_5 = 12 [ (resdata.cname) = "场上留存人数5人组队" ];
    uint32 AttackRate    = 13 [ (resdata.cname) = "攻击力比例" ];
    uint32 DropMax       = 14 [ (resdata.cname) = "掉落上限" ];
    uint32 ShenFuNum     = 15 [ (resdata.cname) = "Buff神符数量" ];
    string ShenFuIdList  = 16 [ (resdata.cname) = "神符Id列表" ];
    uint32 UseSkillRate  = 17 [ (resdata.cname) = "技能使用几率" ];
    uint32 CoolTime      = 18 [ (resdata.cname) = "温暖冷却时间" ];
}

message ResDT_SceneSkin_Property {
    string Desc = 1 [ (resdata.cname) = "描述" ];
    string Icon = 2 [ (resdata.cname) = "图片" ];
}

message ResSceneSkinInfo {
    uint32 SceneSkinID                               = 1 [ (resdata.cname) = "地图ID" ];
    string SceneSkinName                             = 2 [ (resdata.cname) = "地图名称" ];
    string SceneSkinDesc                             = 3 [ (resdata.cname) = "地图描述" ];
    string SceneSkinIcon                             = 4 [ (resdata.cname) = "地图图标" ];
    string SceneSkinPic                              = 5 [ (resdata.cname) = "地图图片" ];
    string SceneSkinBG                               = 6 [ (resdata.cname) = "地图背景" ];
    string SceneSkinBust                             = 7 [ (resdata.cname) = "地图半身像" ];
    string SceneLoadingIcon                          = 8 [ (resdata.cname) = "地图Loading图" ];
    string SceneSkinThumb                            = 9 [ (resdata.cname) = "地图缩略图" ];
    string SceneSkinPath                             = 10 [ (resdata.cname) = "地图路径" ];
    uint32 SceneSkinLevel                            = 11 [ (resdata.cname) = "地图等级" ];
    repeated ResDT_SceneSkin_Property SceneSkinProps = 12 [ (resdata.cname) = "地图特性", (resdata.count) = "5" ];
    string SceneSkinCloudPath                        = 13 [ (resdata.cname) = "屏风路径" ];
    string ShareSkinUrl                              = 14 [ (resdata.cname) = "分享图片地址" ];
    string ShareSkinVideoUrl                         = 15 [ (resdata.cname) = "分享视频地址" ];
    string SceneBankName                             = 16 [ (resdata.cname) = "Bank资源" ];
    string SceneSkinSoundEvent                       = 17 [ (resdata.cname) = "皮肤音乐" ];
    string SceneEnvSound                             = 18 [ (resdata.cname) = "环境音效" ];
    string GameStartSound                            = 19 [ (resdata.cname) = "开局音效" ];
    string PreBattleSound                            = 20 [ (resdata.cname) = "对局前音效" ];
    string WinSound                                  = 21 [ (resdata.cname) = "胜利音效" ];
    string FailSound                                 = 22 [ (resdata.cname) = "失败音效" ];
    string BattlePrepareSound                        = 23 [ (resdata.cname) = "战斗准备音效" ];
    string SceneRankSinPath                          = 24 [ (resdata.cname) = "排行榜底图" ];
    string SceneRankHeadPath                         = 25 [ (resdata.cname) = "排行榜头像框" ];
    string SceneRankLvlBgPath                        = 26 [ (resdata.cname) = "排行榜等级框" ];
}

message ResActionInfo {
    uint32 ActionID           = 1 [ (resdata.cname) = "动作ID" ];
    string ActionName         = 2 [ (resdata.cname) = "动作名称" ];
    string ActionDesc         = 3 [ (resdata.cname) = "动作描述" ];
    string ActionIcon         = 4 [ (resdata.cname) = "动作图标" ];
    uint32 Quality            = 5 [ (resdata.cname) = "动作品质" ];
    uint32 ActionClass        = 6 [ (resdata.cname) = "动作分类" ];
    uint32 BindHeroID         = 7 [ (resdata.cname) = "绑定英雄ID" ];
    uint32 BindSkinID         = 8 [ (resdata.cname) = "绑定皮肤ID" ];
    string PreviewImageUrl    = 9 [ (resdata.cname) = "预览图片URL" ];
    string PreviewVideoUrl    = 10 [ (resdata.cname) = "预览视频URL" ];
    string ActionAgePath      = 11 [ (resdata.cname) = "动作Age路径" ];
    uint32 IsMovable          = 12 [ (resdata.cname) = "是否可移动动作" ];
    uint32 IsActionAgeForever = 13 [ (resdata.cname) = "动作是否无限循环" ];
    uint32 GroupID            = 14 [ (resdata.cname) = "套系动作ID" ];
    uint32 DiamondOneDay      = 15 [ (resdata.cname) = "一天可转换钻石数" ];
    ResDT_JumpForm JumpForm   = 16 [ (resdata.cname) = "" ];
}

message ResAnimActionConfig {
    uint32 ActionID   = 1 [ (resdata.cname) = "ID" ];
    string ActionName = 2 [ (resdata.cname) = "Action路径" ];
}

message ResTeamInfo {
    uint32 TeamIndex                     = 1 [ (resdata.cname) = "队伍索引" ];
    string BattleInteractiveParticlePath = 2 [ (resdata.cname) = "局内互动特效路径" ];
}

// message ResDT_ChessGlobalEffectItem
// {
//     uint32 EffectType = 1 [(resdata.cname) = "作用范围"];
//     uint32 EffectID = 2 [(resdata.cname) = "效果ID"];
// }

// message ResDT_ChessSpecialParam
// {
//     uint32 paramID = 1 [(resdata.cname) = "数值"];
// }

// message ResDT_ChessGlobalEffectInfo
// {
//     string EffectDesc = 1 [(resdata.cname) = "效果描述"];
//     int32 AbilityScale = 2 [(resdata.cname) = "战力放大万分比"];
//     repeated ResDT_ChessGlobalEffectItem Effect = 3 [(resdata.cname) = "效果", (resdata.count) = "3"];
//     ResDT_ChessGlobalEffectItem PreEffect = 4 [(resdata.cname) = "前置效果"];
//     repeated ResDT_ChessSpecialParam SpecialParam = 5 [(resdata.cname) = "特殊参数", (resdata.count) = "3"];
// }

message ResDT_ChessEffectNum { uint32 RelativeNum = 1 [ (resdata.cname) = "人数" ]; }

message ResDT_ChessIconPath { string IconPath = 1 [ (resdata.cname) = "路径" ]; }

message ResDT_ChessRelativeQuality { uint32 RelativeQuality = 1 [ (resdata.cname) = "品质" ]; }

message ResDT_AuctionDropInfo {
    repeated uint32 DropPlanID = 1 [ (resdata.cname) = "拍卖掉落ID", (resdata.count) = "6" ];
    uint32 ChessSecurityPlanID = 2 [ (resdata.cname) = "棋子保底掉落ID" ];
}

message ResChessAuctionRound {
    option (cltgen.pk)               = "ID";
    option (cltgen.index)            = "GroupID";
    option (cltgen.gamecore_databin) = true;
    option (cltgen.gen_default)      = true;

    uint32 ID               = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 GroupID               = 2 [ (resdata.cname) = "方案组ID", (bingogen.primary_key) = 2 ];
    uint32 Power                 = 3 [ (resdata.cname) = "权重" ];
    ResDT_AuctionDropInfo DropInfo   = 4 [(resdata.cname) = ""];
}

message RessChessAIUpgradeConfig {
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 Level     = 1 [ (resdata.cname) = "等级" ];
    uint32 RoundLow  = 2 [ (resdata.cname) = "随机回合数下限" ];
    uint32 RoundHigh = 3 [ (resdata.cname) = "随机回合数上限" ];
}

message ResChessAuctionItemCount {
    option (cltgen.pk)               = "AlivePlayers";
    option (cltgen.gamecore_databin) = true;

    uint32 AlivePlayers = 1 [ (resdata.cname) = "存活玩家数量", (bingogen.primary_key) = 1 ];
    uint32 ItemCount    = 2 [ (resdata.cname) = "拍卖品数量" ];
}

message ResChessAuctionTime {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID        = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 RaiseTime = 2 [ (resdata.cname) = "出价阶段时长" ];
    uint32 ShowTime  = 3 [ (resdata.cname) = "获胜阶段时长" ];
}

message ResChessAuctionUnlockCfg {
    option (cltgen.pk)               = "Mode";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 Mode       = 1 [ (resdata.cname) = "解锁模式", (bingogen.primary_key) = 1 ];
    int32 Phase1Count = 2 [ (resdata.cname) = "第一轮解锁总数" ];
    int32 Phase2Count = 3 [ (resdata.cname) = "第二轮解锁总数" ];
    int32 Phase3Count = 4 [ (resdata.cname) = "第三轮解锁总数" ];
}

message ResChessAuctionDividendCfg {
    option (cltgen.pk)               = "JoinCount";
    option (cltgen.gamecore_databin) = true;

    uint32 JoinCount         = 1 [ (resdata.cname) = "参与人数", (bingogen.primary_key) = 1 ];
    repeated uint32 PosOrder = 2 [ (resdata.cname) = "位置", (resdata.count) = "8" ];
}

message ResDT_ChessPresetInfo {
    uint32 ConfigId         = 1 [ (resdata.cname) = "ID" ];
    int32 CoordX            = 3 [ (resdata.cname) = "X坐标" ];
    int32 CoordZ            = 4 [ (resdata.cname) = "Z坐标" ];
    repeated uint32 EquipID = 5 [ (resdata.cname) = "装备ID", (resdata.count) = "3" ];
}

message ResProj8EffectDegree {
    option (cltgen.system_databin) = true;

    uint32 ID     = 1 [ (resdata.cname) = "ID" ];
    uint32 Degree = 2 [ (resdata.cname) = "熟练度" ];
    string Name   = 3 [ (resdata.cname) = "段位名称" ];
    uint32 Type   = 4 [ (resdata.cname) = "段位类型" ];
    string Icon   = 5 [ (resdata.cname) = "段位图标" ];
}

message ResChessPreset {
    option (cltgen.pk)               = "PresetID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 PresetID                             = 1 [ (resdata.cname) = "摆放ID", (bingogen.primary_key) = 1 ];
    uint32 Preload                              = 2 [ (resdata.cname) = "预加载" ];
    string PrepareSound                         = 3 [ (resdata.cname) = "准备阶段音效" ];
    string Desc                                 = 4 [ (resdata.cname) = "描述" ];
    repeated ResDT_ChessPresetInfo PresetDetail = 5 [ (resdata.cname) = "棋子", (resdata.count) = "10" ];
}

message ResChessPickCardAutoTest {
    uint32 ID              = 1 [ (resdata.cname) = "ID" ];
    repeated uint32 HeroID = 2 [ (resdata.cname) = "卡牌", (resdata.count) = "5" ];
}

message ResChessSkinInfo {
    option (cltgen.pk)             = "SkinID";
    option (cltgen.system_databin) = true;

    uint32 SkinID            = 1 [ (resdata.cname) = "皮肤ID", (bingogen.primary_key) = 1 ];
    string HeroComposeSound2 = 2 [ (resdata.cname) = "棋子二星合成语音" ];
    string HeroComposeSound3 = 3 [ (resdata.cname) = "棋子三星合成语音" ];
    string HeroBuySound      = 4 [ (resdata.cname) = "棋子招募语音" ];
    string HeroWinSound      = 5 [ (resdata.cname) = "棋子胜利语音" ];
    string HeroOnFightSound  = 6 [ (resdata.cname) = "棋子上阵语音" ];
    string BankNameVO        = 7 [ (resdata.cname) = "Bank资源VO" ];
    string BankNameSFX       = 8 [ (resdata.cname) = "Bank资源SFX" ];
}

message ResChessSimulate {
    uint32 ID        = 1 [ (resdata.cname) = "ID" ];
    uint32 PresetID1 = 2 [ (resdata.cname) = "摆放ID1" ];
    uint32 PresetID2 = 3 [ (resdata.cname) = "摆放ID2" ];
    uint32 Type      = 4 [ (resdata.cname) = "种类" ];
}

message ResChessQualityStarInfo {
    option (cltgen.pk)               = "ChessQuality, StarLevel";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 ChessQuality                = 1 [ (resdata.cname) = "品质", (bingogen.primary_key) = 1 ];
    uint32 StarLevel                   = 2 [ (resdata.cname) = "星级", (bingogen.primary_key) = 2 ];
    int32 ChessBuyPrice                = 3 [ (resdata.cname) = "购买价格" ];
    int32 ChessSellPrice               = 4 [ (resdata.cname) = "售卖价格" ];
    int32 ChessBuyPriceSuperFastMode   = 5 [ (resdata.cname) = "快棋购买价格" ];
    int32 ChessSellPriceSuperFastMode  = 6 [ (resdata.cname) = "快棋售卖价格" ];
    int32 ChessDmageValue              = 7 [ (resdata.cname) = "结算伤害" ];
    int32 ChessDmageValueFastMode      = 8 [ (resdata.cname) = "大乱斗结算伤害" ];
    int32 ChessDmageValueSuperFastMode = 9 [ (resdata.cname) = "快棋结算伤害" ];
    int32 ChessValueScore              = 10 [ (resdata.cname) = "价值" ];
}

message ResChessCardQualityChance {
    option (cltgen.pk) = "PlayerLv";

    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 PlayerLv             = 1 [ (resdata.cname) = "卡库等级", (bingogen.primary_key) = 1 ];
    repeated uint32 ChanceValue = 2 [ (resdata.cname) = "品质概率", (resdata.count) = "5" ];
    int32 CardNum               = 3 [ (resdata.cname) = "卡槽数" ];
    int32 ShowUI                = 4 [ (resdata.cname) = "是否UI显示" ];
}

message ResChessPhaseInfo {
    option (cltgen.pk)               = "PhaseID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 PhaseID  = 1 [ (resdata.cname) = "阶段", (bingogen.primary_key) = 1 ];
    uint32 Duration = 2 [ (resdata.cname) = "持续时间" ];
}

message ResExtraFightHeroInfo {
    option (cltgen.pk)               = "HeroCfgID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 HeroCfgID = 1 [ (resdata.cname) = "英雄ID", (bingogen.primary_key) = 1 ];
}

message StreakReward {
    option (cltgen.pk)               = "Round";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    int32 Round                    = 1 [ (resdata.cname) = "轮数", (bingogen.primary_key) = 1 ];
    uint32 WinReward               = 2 [ (resdata.cname) = "连胜奖励" ];
    uint32 LoseReward              = 3 [ (resdata.cname) = "连败奖励" ];
    uint32 FastModeWinReward       = 4 [ (resdata.cname) = "大乱斗连胜奖励" ];
    uint32 FastModeLoseReward      = 5 [ (resdata.cname) = "大乱斗连败奖励" ];
    uint32 SuperFastModeWinReward  = 6 [ (resdata.cname) = "快棋连胜奖励" ];
    uint32 SuperFastModeLoseReward = 7 [ (resdata.cname) = "快棋连败奖励" ];
}

message StreakFinishReward {
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 Count            = 1 [ (resdata.cname) = "次数" ];
    uint32 FinishWinReward  = 2 [ (resdata.cname) = "终结连胜奖励金币数" ];
    uint32 FinishLoseReward = 3 [ (resdata.cname) = "终结连败奖励金币数" ];
}

message ResDT_SettlePhrase { string Phrase = 1 [ (resdata.cname) = "文本" ]; }

message ResChessSettlePhrase {
    option (cltgen.pk)             = "Rank, Relative";
    option (cltgen.system_databin) = true;

    uint32 Rank                            = 1 [ (resdata.cname) = "排名", (bingogen.primary_key) = 1 ];
    uint32 Relative                        = 2 [ (resdata.cname) = "职业阵营", (bingogen.primary_key) = 2 ];
    repeated ResDT_SettlePhrase PhraseList = 3 [ (resdata.cname) = "结束语", (resdata.count) = "3" ];
}

message ResChessRecommendArrangeCfgInfo {
    option (cltgen.pk)             = "ID";
    option (cltgen.system_databin) = true;

    uint32 ID                = 1 [ (resdata.cname) = "阵容ID", (bingogen.primary_key) = 1 ];
    uint32 Type              = 2 [ (resdata.cname) = "阵容类型" ];
    string Name              = 3 [ (resdata.cname) = "阵容名称" ];
    uint32 Difficulty        = 4 [ (resdata.cname) = "阵容难度" ];
    uint32 RecommendIndex    = 5 [ (resdata.cname) = "推荐指数" ];
    string Desc              = 6 [ (resdata.cname) = "阵容描述" ];
    string Feature           = 7 [ (resdata.cname) = "阵容特性" ];
    repeated uint32 HeroList = 8 [ (resdata.cname) = "英雄ID", (resdata.count) = "9" ];
    repeated uint32 KeyHero  = 9 [ (resdata.cname) = "是否是核心英雄", (resdata.count) = "9" ];
}

message ChessArrangeProbabilityRegion {
    option (cltgen.system_databin) = true;

    uint32 ID       = 1 [ (resdata.cname) = "ID" ];
    uint32 MaxValue = 2 [ (resdata.cname) = "最大值" ];
    uint32 MinValue = 3 [ (resdata.cname) = "最小值" ];
}

message ResProj8HelpDescMain {
    uint32 ID         = 1 [ (resdata.cname) = "ID" ];
    string Title      = 2 [ (resdata.cname) = "标题" ];
    uint32 ShowSystem = 3 [ (resdata.cname) = "显示系统" ];
}

message ResProj8HelpDescPics { string path = 1 [ (resdata.cname) = "路径" ]; }

message ResProj8HelpDescItems {
    int32 ID                           = 1 [ (resdata.cname) = "ID" ];
    uint32 ParentID                    = 2 [ (resdata.cname) = "父ID" ];
    string Title                       = 3 [ (resdata.cname) = "标题" ];
    repeated ResProj8HelpDescPics Pics = 4 [ (resdata.cname) = "图片", (resdata.count) = "5" ];
    uint32 VideoID                     = 5 [ (resdata.cname) = "视频ID" ];
    string Content                     = 6 [ (resdata.cname) = "说明文本" ];
    string ContentUserBack             = 7 [ (resdata.cname) = "用户回流的说明文本" ];
}

message ResProj8HelpOperate {
    uint32 ID           = 1 [ (resdata.cname) = "ID" ];
    string Title        = 2 [ (resdata.cname) = "标题" ];
    string LocalVideo   = 3 [ (resdata.cname) = "本地视频地址" ];
    string NetVideo     = 4 [ (resdata.cname) = "网络视频地址" ];
    string NetVideoSize = 5 [ (resdata.cname) = "网络视频大小" ];
}

message ResChessSubProcInfo {
    uint32 SubProcType = 1 [ (resdata.cname) = "子环节类型" ];
    uint32 Condition   = 2 [ (resdata.cname) = "触发条件" ];
    uint32 Weight      = 3 [ (resdata.cname) = "权重" ];
    string TextContent = 4 [ (resdata.cname) = "文本内容" ];
    string SoundEvent  = 5 [ (resdata.cname) = "声音事件" ];
}

message ResChessCardInfo {
    uint32 HeroCfgId = 1 [ (resdata.cname) = "ID" ];
    uint32 CardNum   = 2 [ (resdata.cname) = "数量" ];
}

message ExchangeCardRoundInfo {
    option (cltgen.pk)               = "RoundID";
    option (cltgen.gamecore_databin) = true;

    uint32 RoundID              = 1 [ (resdata.cname) = "回合ID", (bingogen.primary_key) = 1 ];
    uint32 RandGroupID          = 2 [ (resdata.cname) = "随机方案组" ];
    uint32 ChooseDuration       = 3 [ (resdata.cname) = "选牌时间" ];
    uint32 ExchangeCardDuration = 4 [ (resdata.cname) = "换牌时间" ];
    uint32 ChooseCardTurn       = 5 [ (resdata.cname) = "选牌轮次" ];
}

message ExchangeCardRandRewardInfo {
    option (cltgen.gamecore_databin) = true;
    option (cltgen.index)            = "RandGroupID";

    uint32 ID                    = 1 [ (resdata.cname) = "ID" ];
    uint32 RandGroupID           = 2 [ (resdata.cname) = "方案组" ];
    uint32 Weight                = 3 [ (resdata.cname) = "权重" ];
    repeated uint32 CardList     = 4 [ (resdata.cname) = "奖励", (resdata.count) = "6" ];
    uint32 CommonHeroPoolID      = 5 [ (resdata.cname) = "英雄公共池ID" ];
    uint32 CommonEquipPoolID     = 6 [ (resdata.cname) = "装备公共池ID" ];
    uint32 CommonHeroEquipPoolID = 7 [ (resdata.cname) = "英雄装备公共池ID" ];
    uint32 MinCount              = 8 [ (resdata.cname) = "人数条件下限" ];
    uint32 MaxCount              = 9 [ (resdata.cname) = "人数条件上限" ];
    uint32 SingleCardValue       = 10 [ (resdata.cname) = "单卡价值" ];
}

message ResChessRewardBoxInfo {
    uint32 ID       = 1 [ (resdata.cname) = "宝箱ID" ];
    uint32 DropID   = 2 [ (resdata.cname) = "掉落ID" ];
    string Desc1    = 3 [ (resdata.cname) = "宝箱描述1" ];
    string Desc2    = 4 [ (resdata.cname) = "宝箱描述2" ];
    string MeshPath = 5 [ (resdata.cname) = "宝箱模型路径" ];
    string IconPath = 6 [ (resdata.cname) = "宝箱图标路径" ];
}

message ResChessCardPoolInfo {
    option (cltgen.pk) = "Quality";

    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 Quality                           = 1 [ (resdata.cname) = "卡片品质", (bingogen.primary_key) = 1 ];
    repeated ResChessCardInfo ChessCardInfos = 2 [ (resdata.cname) = "", (resdata.count) = "20" ];
}

// message ResChessEquipInfo
// {
//     uint32 ID = 1 [(resdata.cname) = "装备ID"];
//     string Name = 2 [(resdata.cname) = "装备名称"];
//     string DescLabel = 3 [(resdata.cname) = "装备描述"];
//     string FinalEffectLabel = 4 [(resdata.cname) = "最终效果"];
//     string DetailDesc = 5 [(resdata.cname) = "详细描述"];
//     string Recommend = 6 [(resdata.cname) = "推荐"];
//     uint32 Type = 7 [(resdata.cname) = "装备分类"];
//     string Icon = 8 [(resdata.cname) = "装备图标"];
//     uint32 Quality = 9 [(resdata.cname) = "装备品阶"];
//     uint32 StarID = 10 [(resdata.cname) = "装备星级"];
//     uint32 ComposeCount = 11 [(resdata.cname) = "合成数量"];
//     uint32 PhyAttack = 12 [(resdata.cname) = "攻击力"];
//     uint32 AttackSpeed = 13 [(resdata.cname) = "攻击速度"];
//     uint32 CriticalHit = 14 [(resdata.cname) = "暴击"];
//     uint32 HealthSteal = 15 [(resdata.cname) = "生命偷取"];
//     uint32 MagicAttack = 16 [(resdata.cname) = "法术强度"];
//     uint32 CDReduce = 17 [(resdata.cname) = "冷却缩减"];
//     uint32 MagicPoint = 18 [(resdata.cname) = "法力值"];
//     uint32 InitMagicPoint = 19 [(resdata.cname) = "初始法力值"];
//     uint32 MagicRecover = 20 [(resdata.cname) = "法力回复"];
//     uint32 PhyDefence = 21 [(resdata.cname) = "护甲"];
//     uint32 MagicDefence = 22 [(resdata.cname) = "魔抗"];
//     uint32 HealthPoint = 23 [(resdata.cname) = "生命值"];
//     uint32 HealthRecover = 24 [(resdata.cname) = "生命回复"];
//     uint32 MoveSpeedPercent = 25 [(resdata.cname) = "移动速度比例"];
//     uint32 MoveSpeedValue = 26 [(resdata.cname) = "移动速度数值"];
//     uint32 AttackIntensity = 27 [(resdata.cname) = "普攻强度"];
//     uint32 MagicRecoverRate = 28 [(resdata.cname) = "法力回复比例"];
//     uint32 SkillRecover = 29 [(resdata.cname) = "技能回复"];
//     uint32 DefendRecover = 30 [(resdata.cname) = "防御技能回复"];
//     repeated ResPassiveSkill PassiveSkill = 31 [(resdata.cname) = "被动技能", (resdata.count) = "4"];
//     repeated ResEffectCombine EffectCombine = 32 [(resdata.cname) = "效果组合", (resdata.count) = "3"];
//     repeated ResActiveSkill ActiveSkill = 33 [(resdata.cname) = "主动技能", (resdata.count) = "2"];
//     int32 UIEffectId = 34 [(resdata.cname) = "UI效果ID"];
//     string SpecialDesc = 35 [(resdata.cname) = "特殊描述"];
//     uint32 SpecialDescType = 36 [(resdata.cname) = "特殊描述类型"];
//     int32 SpecialDescParam = 37 [(resdata.cname) = "特殊描述参数"];
//     uint32 ExtraPhyAttack = 38 [(resdata.cname) = "总物攻"];
//     uint32 ExtraMagicAttack = 39 [(resdata.cname) = "总法攻"];
//     uint32 ExtraDefence = 40 [(resdata.cname) = "总防御"];
//     repeated uint32 AdditionRelative = 41 [(resdata.cname) = "附加羁绊", (resdata.count) = "2"];
//     uint32 RemoveSelfRelative = 42 [(resdata.cname) = "移除自己的羁绊"];
//     uint32 ImmediateRmvEquipEffect = 43 [(resdata.cname) = "立即拔除装备效果"];
//     uint32 MaleAdditionRelative = 44 [(resdata.cname) = "男性附加羁绊"];
//     uint32 FemaleAdditionRelative = 45 [(resdata.cname) = "女性附加羁绊"];
//     uint32 MeleeAdditionRelative = 46 [(resdata.cname) = "近战附加羁绊"];
//     uint32 RemoteAdditionRelative = 47 [(resdata.cname) = "远程附加羁绊"];
//     uint32 AdAdditionRelative = 48 [(resdata.cname) = "物理附加羁绊"];
//     uint32 ApAdditionRelative = 49 [(resdata.cname) = "法术附加羁绊"];
//     uint32 IsOnly = 50 [(resdata.cname) = "装备唯一性"];
//     uint32 PreId1 = 51 [(resdata.cname) = "前置装备1ID"];
//     uint32 PreId2 = 52 [(resdata.cname) = "前置装备2ID"];
//     uint32 Exclusive = 53 [(resdata.cname) = "专属装备"];
//     uint32 EquipFuncType = 54 [(resdata.cname) = "装备功能类型"];
//     uint32 EquipDropID = 55 [(resdata.cname) = "装备掉落ID"];
//     uint32 EquipCareerType = 56 [(resdata.cname) = "装备令牌职业"];
//     uint32 EquipCampType = 57 [(resdata.cname) = "装备令牌阵营"];
//     int32 ShowBufferLayerID = 58 [(resdata.cname) = "显示buff层数ID"];
//     uint32 AtlasType = 59 [(resdata.cname) = "图鉴分类"];
//     uint32 IsNotShowInAtlas = 60 [(resdata.cname) = "图鉴不展示"];
//     uint32 CanTakenOff = 61 [(resdata.cname) = "是否可拆卸"];
// }

message ResChessMonsterDropInfo {
    option (cltgen.pk)               = "MonsterID";
    option (cltgen.gamecore_databin) = true;

    uint32 MonsterID            = 1 [ (resdata.cname) = "怪物ID", (bingogen.primary_key) = 1 ];
    string MonsterName          = 2 [ (resdata.cname) = "怪物名称" ];
    uint32 EntertainmentSubType = 3 [ (resdata.cname) = "娱乐地图子类型" ];
    uint32 RoundStart           = 4 [ (resdata.cname) = "回合掉落起始" ];
    uint32 RoundEnd             = 5 [ (resdata.cname) = "回合掉落结束" ];
    uint32 NormalDropID         = 6 [ (resdata.cname) = "掉落ID" ];
    uint32 WarmBattleDropID     = 7 [ (resdata.cname) = "温暖局掉落ID" ];
    uint32 TailDropID           = 8 [ (resdata.cname) = "尾部玩家掉落ID" ];
}

message ChessSingleDropProbability {
    uint32 EquipGroupID = 1 [ (resdata.cname) = "ID" ];
    uint32 Probability  = 2 [ (resdata.cname) = "概率" ];
}

message ResChessDropInfo {
    option (cltgen.pk)               = "DropID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 DropID                                       = 1 [ (resdata.cname) = "宝箱ID", (bingogen.primary_key) = 1 ];
    string DropName                                     = 2 [ (resdata.cname) = "宝箱名称" ];
    string DropDescLabel                                = 3 [ (resdata.cname) = "宝箱描述" ];
    string DropModel                                    = 4 [ (resdata.cname) = "宝箱模型" ];
    uint32 DropQuality                                  = 5 [ (resdata.cname) = "宝箱品质" ];
    uint32 EmptyDropProbability                         = 6 [ (resdata.cname) = "空白掉落概率" ];
    repeated ChessSingleDropProbability DropProbability = 7 [ (resdata.cname) = "掉落集合", (resdata.count) = "3" ];
}

message ResChessDropEquipGroupInfo {
    option (cltgen.gamecore_databin) = true;
    option (cltgen.index)            = "EquipGroupID";

    uint32 EquipGroupID     = 1 [ (resdata.cname) = "掉落集合ID" ];
    uint32 EquipID          = 2 [ (resdata.cname) = "装备ID" ];
    uint32 EquipType        = 3 [ (resdata.cname) = "装备类型" ];
    uint32 EquipProbability = 4 [ (resdata.cname) = "掉落概率" ];
}

message ResChessEquipPickInfo {
    option (cltgen.pk)               = "RoundID";
    option (cltgen.gamecore_databin) = true;

    uint32 RoundID           = 1 [ (resdata.cname) = "回合ID", (bingogen.primary_key) = 1 ];
    uint32 Time              = 2 [ (resdata.cname) = "抽卡时间" ];
    uint32 PickCount         = 3 [ (resdata.cname) = "装备获得数量" ];
    uint32 LimitRefreshCount = 4 [ (resdata.cname) = "限制刷新次数" ];
    repeated uint32 DropID   = 5 [ (resdata.cname) = "掉落ID", (resdata.count) = "5" ];
}

message ResChessEquipRefreshCost {
    option (cltgen.pk)               = "CountID";
    option (cltgen.gamecore_databin) = true;

    uint32 CountID = 1 [ (resdata.cname) = "刷新次数", (bingogen.primary_key) = 1 ];
    uint32 Cost    = 2 [ (resdata.cname) = "刷新费用" ];
}

message ResDT_ChessPresetFormationInfo {
    uint32 X = 1 [ (resdata.cname) = "X" ];
    uint32 Y = 2 [ (resdata.cname) = "Y" ];
}

message ResChessPresetFormation {
    option (cltgen.pk)               = "ID, SubID";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 ID                                        = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 SubID                                     = 2 [ (resdata.cname) = "阵型子编号", (bingogen.primary_key) = 2 ];
    string Name                                      = 3 [ (resdata.cname) = "阵型名称" ];
    string Desc                                      = 4 [ (resdata.cname) = "阵型描述" ];
    string Image                                     = 5 [ (resdata.cname) = "阵型图片" ];
    uint32 FrontNum                                  = 6 [ (resdata.cname) = "前排数量" ];
    repeated ResDT_ChessPresetFormationInfo Front    = 7 [ (resdata.cname) = "前排", (resdata.count) = "10" ];
    uint32 BackNum                                   = 8 [ (resdata.cname) = "后排数量" ];
    repeated ResDT_ChessPresetFormationInfo Back     = 9 [ (resdata.cname) = "后排", (resdata.count) = "10" ];
    uint32 AssassinNum                               = 10 [ (resdata.cname) = "刺客数量" ];
    repeated ResDT_ChessPresetFormationInfo Assassin = 11 [ (resdata.cname) = "刺客", (resdata.count) = "10" ];
}

message ResDT_IgnoreCard {
    uint32 Ratio      = 1 [ (resdata.cname) = "万分比" ];
    uint32 DiscardNum = 2 [ (resdata.cname) = "无视牌数" ];
}

message ResChessAILevel {
    option (cltgen.pk)               = "AILevel";
    option (cltgen.gamecore_databin) = true;

    uint32 AILevel                                  = 1 [ (resdata.cname) = "AI难度", (bingogen.primary_key) = 1 ];
    repeated ResDT_IgnoreCard ExceedBattleScoreInfo = 2 [ (resdata.cname) = "超战力", (resdata.count) = "5" ];
    uint32 MinOpInterval                            = 3 [ (resdata.cname) = "操作最小间隔" ];
    uint32 MaxOpInterval                            = 4 [ (resdata.cname) = "操作最大间隔" ];
    uint32 SellUseLess                              = 5 [ (resdata.cname) = "售卖无用棋子" ];
    uint32 ClearDepositCard                         = 6 [ (resdata.cname) = "清理弃牌库" ];
    uint32 UseSkill                                 = 7 [ (resdata.cname) = "自动放技能" ];
    uint32 FastHighRelative                         = 8 [ (resdata.cname) = "快速成型高层羁绊" ];
    uint32 HighStarFirst                            = 9 [ (resdata.cname) = "优先三星合成" ];
    uint32 DelayUpgradeRound                        = 10 [ (resdata.cname) = "延后升级回合数" ];
    uint32 GoldEnoughUpgrade                        = 11 [ (resdata.cname) = "满钱自动升级" ];
    uint32 RearrangeEquip                           = 12 [ (resdata.cname) = "重新安排已装备的装备" ];
    uint32 RandomEquip                              = 13 [ (resdata.cname) = "乱选装备" ];
    uint32 RoundBuyCardNum                          = 14 [ (resdata.cname) = "每回合购卡数量" ];
    uint32 UseSlotNum                               = 15 [ (resdata.cname) = "使用槽位数量" ];
    uint32 NoRelative                               = 16 [ (resdata.cname) = "不考虑羁绊" ];
    int32 DiscardGoldRate                           = 17 [ (resdata.cname) = "每回合弃钱万分比" ];
    uint32 EquipWeak                                = 18 [ (resdata.cname) = "优先给最弱的英雄穿装备" ];
    uint32 NoFormation                              = 19 [ (resdata.cname) = "不使用快速阵型" ];
    uint32 NoSubjectiveRepick                       = 20 [ (resdata.cname) = "不使用科学抽卡" ];
    uint32 NoRiskRepick                             = 21 [ (resdata.cname) = "不板命" ];
    int32 UseEquipNum                               = 22 [ (resdata.cname) = "限制使用装备数量" ];
    uint32 FastModeDiscardGold                      = 23 [ (resdata.cname) = "乱斗模式初始弃钱数量" ];
}

message ResProject8ShopInfo {
    uint32 ID                  = 1 [ (resdata.cname) = "商品ID" ];
    uint32 CoinType            = 2 [ (resdata.cname) = "货币类型" ];
    uint32 CoinCost            = 3 [ (resdata.cname) = "货币价格" ];
    uint32 BuyLimitType        = 4 [ (resdata.cname) = "限购周期类型" ];
    uint32 BuyLimitCnt         = 5 [ (resdata.cname) = "周期限购数量" ];
    ResDT_RewardItem BaseAward = 6 [ (resdata.cname) = "" ];
    uint32 IsShow              = 7 [ (resdata.cname) = "是否展示" ];
}

// message ResProject8LordInfo
// {
//     uint32 ID = 1 [(resdata.cname) = "领主ID"];
//     uint32 Enabled = 2 [(resdata.cname) = "是否可用"];
//     uint32 ChessID = 3 [(resdata.cname) = "局内英雄ID"];
//     string Name = 4 [(resdata.cname) = "领主名称"];
//     string ActorInfoPath = 5 [(resdata.cname) = "ActorInfo路径"];
//     uint32 Health = 6 [(resdata.cname) = "生命"];
//     uint32 AwardGroupID = 7 [(resdata.cname) = "领主奖励组ID"];
// }

message ResProject8AwardInfo {
    option (cltgen.pk)               = "ID, ShowIndex";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    enum AwardLevelType
    {
        option (cltgen.gamecore_enum) = true;
        option (cltgen.csharp_enum) = true;
        
        AwardLevelType_Default = 0;
        AwardLevelType_1 = 1 [(resdata.keyword_alias) = "领主奖励B"];
        AwardLevelType_2 = 2 [(resdata.keyword_alias) = "领主奖励A"];
        AwardLevelType_3 = 3 [(resdata.keyword_alias) = "领主奖励S"];
        AwardLevelType_4 = 4 [(resdata.keyword_alias) = "领主奖励SS"];
    }

    uint32 ID                  = 1 [ (resdata.cname) = "领主奖励组ID", (bingogen.primary_key) = 1 ];
    uint32 ShowIndex           = 2 [ (resdata.cname) = "出现时机", (bingogen.primary_key) = 2 ];
    AwardLevelType AwardLevel  = 3 [ (resdata.cname) = "奖励等级" ];
    string AwardDes            = 4 [ (resdata.cname) = "奖励描述说明" ];
    repeated uint32 DropIDList = 5 [ (resdata.cname) = "重复奖励掉落ID", (resdata.count) = "8" ];
}

message ResProject8LordActionInfo {
    uint32 ID         = 1 [ (resdata.cname) = "表情ID" ];
    uint32 LordID     = 2 [ (resdata.cname) = "领主ID" ];
    string ActionDes  = 3 [ (resdata.cname) = "表情描述" ];
    string ActionPath = 4 [ (resdata.cname) = "美术资源路径" ];
}

message ResProject8BossRoundConfig {
    option (cltgen.pk)               = "RoundNum";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Editor;

    uint32 ID               = 1 [ (resdata.cname) = "轮次" ];
    uint32 RoundNum         = 2 [ (resdata.cname) = "开始回合" ];
    uint32 PlayerCount      = 3 [ (resdata.cname) = "挑战玩家数" ];
    uint32 PresetID         = 4 [ (resdata.cname) = "BOSS摆放ID" ];
    uint32 MatchType        = 5 [ (resdata.cname) = "匹配规则" ];
    uint32 RoundEnd         = 6 [ (resdata.cname) = "结束回合" ];
    uint32 RaceTime         = 7 [ (resdata.cname) = "正赛时间" ];
    uint32 AwardTime        = 8 [ (resdata.cname) = "奖励时间" ];
    string BossEnterAge     = 9 [ (resdata.cname) = "BOSS出场AGE" ];
    uint32 AwardChooseType  = 10 [ (resdata.cname) = "自选奖励方案" ];
    uint32 GroupPlayerCount = 11 [ (resdata.cname) = "分组自选玩家数" ];
}

message ResProject8BossAwardCountCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID            = 1 [ (resdata.cname) = "人数", (bingogen.primary_key) = 1 ];
    uint32 Num           = 2 [ (resdata.cname) = "奖励数量" ];
    uint32 RankNum       = 3 [ (resdata.cname) = "排名奖励数量" ];
    uint32 GroupAwardNum = 4 [ (resdata.cname) = "分组奖励数量" ];
}

message ResProject8PlanCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    uint32 ID                   = 1 [ (resdata.cname) = "随机方案组", (bingogen.primary_key) = 1 ];
    uint32 Power                = 2 [ (resdata.cname) = "权重" ];
    uint32 BossHpAwardID        = 3 [ (resdata.cname) = "打野随机方案组" ];
    uint32 BossChooseAwardID    = 4 [ (resdata.cname) = "打野自选方案组" ];
    uint32 ExchangeCardID       = 5 [ (resdata.cname) = "换牌方案组" ];
    uint32 GrabAwardID          = 6 [ (resdata.cname) = "争夺赛方案组" ];
    uint32 AirdropAwardID       = 7 [ (resdata.cname) = "全局投放方案组" ];
    uint32 PlayerTalentSlotType = 8 [ (resdata.cname) = "玩家天赋槽类型" ];
    uint32 StartRank            = 9 [ (resdata.cname) = "开始段位", (resdata.bind) = "EPvpRankType" ];
    uint32 RandLordDropID       = 10 [ (resdata.cname) = "随机领主奖励ID" ];
    uint32 AuctionGroupID       = 11 [ (resdata.cname) = "拍卖方案组" ];
    uint32 EndRank              = 12 [ (resdata.cname) = "结束段位", (resdata.bind) = "EPvpRankType" ];
    
}

message ResProject8BossChooseAwardCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.index)            = "GroupID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID                  = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 GroupID             = 2 [ (resdata.cname) = "随机方案组", (bingogen.primary_key) = 2 ];
    uint32 Power               = 3 [ (resdata.cname) = "权重" ];
    repeated uint32 DropIDList = 4 [ (resdata.cname) = "奖励", (resdata.count) = "10" ];
}

message ResProject8BossHpAwardCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.index)            = "GroupID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID                  = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 GroupID             = 2 [ (resdata.cname) = "随机方案组", (bingogen.primary_key) = 2 ];
    uint32 Power               = 3 [ (resdata.cname) = "权重" ];
    repeated uint32 DropIDList = 4 [ (resdata.cname) = "奖励", (resdata.count) = "10" ];
}

message ResProject8GrabAwardCountCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID   = 1 [ (resdata.cname) = "人数", (bingogen.primary_key) = 1 ];
    uint32 Num  = 2 [ (resdata.cname) = "奖励数量" ];
    uint32 Time = 3 [ (resdata.cname) = "争夺时长" ];
}

message ResProject8GrabAwardDropCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.index)            = "GroupID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID                  = 1 [ (resdata.cname) = "ID", (bingogen.primary_key) = 1 ];
    uint32 GroupID             = 2 [ (resdata.cname) = "随机方案组", (bingogen.primary_key) = 2 ];
    uint32 Power               = 3 [ (resdata.cname) = "权重" ];
    repeated uint32 DropIDList = 4 [ (resdata.cname) = "奖励", (resdata.count) = "8" ];
}

message ResProject8GrabAwardGlobalCfg {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;
    option (cltgen.system_databin)   = true;

    uint32 ID    = 1 [ (resdata.cname) = "ID" ];
    uint32 Value = 2 [ (resdata.cname) = "变量" ];
}

message ResDT_DropGroup {
    uint32 DropGroupID        = 1 [ (resdata.cname) = "方案" ];
    uint32 DropGroupProbality = 2 [ (resdata.cname) = "概率" ];
}

message ResProject8DropPlanInfo {
    option (cltgen.pk)               = "ID";
    option (cltgen.gamecore_databin) = true;

    uint32 ID                          = 1 [ (resdata.cname) = "掉落ID", (bingogen.primary_key) = 1 ];
    repeated ResDT_DropGroup DropGroup = 2 [ (resdata.cname) = "掉落集合ID", (resdata.count) = "8" ];
}

message ResDT_DropGroupCondition {
    uint32 ConditionType   = 1 [ (resdata.cname) = "", (resdata.bind) = "RES_PROJECT8_DROP_CONDITION_TYPE" ];
    uint32 ConditionParam1 = 2 [ (resdata.cname) = "参数1" ];
    uint32 ConditionParam2 = 3 [ (resdata.cname) = "参数2" ];
    uint32 ConditionParam3 = 4 [ (resdata.cname) = "参数3" ];
}

message ResDT_DropCardPoolParam {
    uint32 EffectedByCardPool   = 1 [ (resdata.cname) = "关联卡池" ];
    uint32 CardPoolLevel        = 2 [ (resdata.cname) = "卡池随机等级" ];
    uint32 CardPoolCostParam1   = 3 [ (resdata.cname) = "卡池费用参数1" ];
    uint32 CardPoolCostParam2   = 4 [ (resdata.cname) = "卡池费用参数2" ];
    uint32 CardPoolFetterParam1 = 5 [ (resdata.cname) = "卡池羁绊参数1", (resdata.bind) = "RES_RELATIVE_ID" ];
    uint32 CardPoolFetterParam2 = 6 [ (resdata.cname) = "卡池羁绊参数2", (resdata.bind) = "RES_RELATIVE_ID" ];
    uint32 CardPoolStarParam   = 7 [ (resdata.cname) = "卡池星级参数" ];
}

enum RES_PROJECT8_DROP_ITEM_TYPE {
    option (cltgen.gamecore_enum) = true;
    option (cltgen.csharp_enum)   = true;
    option (cltgen.uninode_enum) = true;

    RES_PROJECT8_DROP_ITEM_TYPE_NULL           = 0 [ (resdata.keyword_alias) = "" ];
    RES_PROJECT8_DROP_ITEM_TYPE_HERO           = 1 [ (resdata.keyword_alias) = "局内掉落-英雄" ];
    RES_PROJECT8_DROP_ITEM_TYPE_EQUIP          = 2 [ (resdata.keyword_alias) = "局内掉落-装备" ];
    RES_PROJECT8_DROP_ITEM_TYPE_COIN           = 3 [ (resdata.keyword_alias) = "局内掉落-金币" ];
    RES_PROJECT8_DROP_ITEM_TYPE_HERO_AND_EQUIP = 4 [ (resdata.keyword_alias) = "局内掉落-英雄装备包" ];
    RES_PROJECT8_DROP_ITEM_TYPE_TALENT         = 5 [ (resdata.keyword_alias) = "局内掉落-天赋" ];
    RES_PROJECT8_DROP_ITEM_TYPE_LOGIC_GL       = 6 [ (resdata.keyword_alias) = "局内掉落-逻辑图" ];
    RES_PROJECT8_DROP_ITEM_TYPE_PLAYER_HP      = 7 [ (resdata.keyword_alias) = "局内掉落-棋手生命值" ];
}

message ResProject8DropInfo {
    option (cltgen.gamecore_databin) = true;
    option (cltgen.pk)               = "IndexID";
    option (cltgen.index)            = "ID";

    uint32 ID                                        = 1 [ (resdata.cname) = "ID" ];
    uint32 IndexID                                   = 2 [ (resdata.cname) = "唯一ID", (bingogen.primary_key) = 1 ];
    ResData.RES_PROJECT8_DROP_ITEM_TYPE ItemType     = 3 [ (resdata.cname) = "掉落物类型" ];
    uint32 ItemID                                    = 4 [ (resdata.cname) = "掉落物ID" ];
    uint32 ItemCount                                 = 5 [ (resdata.cname) = "掉落物数量" ];
    uint32 ProbabilityType                           = 6 [ (resdata.cname) = "概率类型", (resdata.bind) = "RES_PROJECT8_DROP_PROBILITY_TYPE" ];
    uint32 Probability                               = 7 [ (resdata.cname) = "概率数值" ];
    uint32 ProbabilityParamType                      = 8 [ (resdata.cname) = "掉落概率参数类型", (resdata.bind) = "RES_PROJECT8_DROP_PROBABILITY_TYPE" ];
    uint32 ProbabilityParam1                         = 9 [ (resdata.cname) = "掉落概率参数1" ];
    uint32 ProbabilityParam2                         = 10 [ (resdata.cname) = "掉落概率参数2" ];
    repeated ResDT_DropGroupCondition ConditionGroup = 11 [ (resdata.cname) = "条件", (resdata.count) = "2" ];
    int32 Discount                                   = 12 [ (resdata.cname) = "价格折扣" ];
    ResDT_DropCardPoolParam CardPoolParam            = 13 [ (resdata.cname) = "" ];
}

message RoundPopulationDamageFix {
    option (cltgen.pk)               = "Damage";
    option (cltgen.gamecore_databin) = true;

    uint32 Damage    = 1 [ (resdata.cname) = "人口伤害", (bingogen.primary_key) = 1 ];
    int32 Correction = 2 [ (resdata.cname) = "伤害校正" ];
}

message ResBloodEffectConfig {
    option (cltgen.pk)             = "SkillCombineId";
    option (cltgen.system_databin) = true;

    int32 SkillCombineId = 1 [ (resdata.cname) = "技能组合表id", (bingogen.primary_key) = 1 ];
}

message ResDT_AwakeInfo {
    uint32 AwakeType                            = 1 [ (resdata.cname) = "类型" ];
    repeated ResDT_IntParamArrayNode AwakeParam = 2 [ (resdata.cname) = "参数", (resdata.count) = "3" ];
    uint32 AwakeBuffID                          = 3 [ (resdata.cname) = "BUFFID" ];
    string AwakeLabel                           = 4 [ (resdata.cname) = "标签" ];
}

message ResSpecialGearAwakeInfo {
    uint32 AwakeID                     = 1 [ (resdata.cname) = "觉醒ID" ];
    repeated ResDT_AwakeInfo AwakeInfo = 2 [ (resdata.cname) = "觉醒效果", (resdata.count) = "5" ];
}

message ResGroup {
    uint32 Type               = 1 [ (resdata.cname) = "类型" ];
    uint32 SubType            = 2 [ (resdata.cname) = "[配置]类型" ];
    ResDT_Common_KeyValue Cfg = 3 [ (resdata.cname) = "[配置]" ];
}

// message ResProject8LordSkillConfig
// {
//     option (cltgen.csharp_type) = true;
//     uint32 LordID               = 1 [(resdata.cname) = "领主ID", (bingogen.primary_key) = 1];
//     uint32 SkillID              = 2 [(resdata.cname) = "技能ID", (bingogen.primary_key) = 2];
//     string Icon                 = 3 [(resdata.cname) = "技能图标"];
//     string Name                 = 4 [(resdata.cname) = "技能名称"];
//     string Desc                 = 5 [(resdata.cname) = "技能描述"];
//     uint32 CostType             = 6 [(resdata.cname) = "技能消耗类型", (resdata.bind) = "LordSkillCostType"];
//     uint32 CostCount            = 7 [(resdata.cname) = "技能消耗参数"];
//     LordSkillInteraction Interaction          = 8 [(resdata.cname) = "交互方式", (resdata.bind) = "LordSkillInteraction"];
//     LordSkillInteractionParam InteractionParam     = 9 [(resdata.cname)= "交互参数", (resdata.bind) = "LordSkillInteractionParam"];
//     uint32 Cooldown             = 10 [(resdata.cname)= "冷却"];
//     uint32 LimitsPerRound       = 11 [(resdata.cname)= "单回合使用次数限制"];
//     uint32 TotalLimits          = 12 [(resdata.cname)= "整场使用次数限制"];
//     uint32 Phase =  13 [(resdata.cname) = "使用时机"];
//     int32 LimitsPerRound = 14 [(resdata.cname) = "单回合使用次数限制"];
//     int32 TotalLimits = 15 [(resdata.cname) = "整场使用次数限制"];
//     string BpPath = 16 [(resdata.cname) = "蓝图路径"];
// }

enum RES_RoundFunction {
    ROUNDFUNCTIONN_NULL = 0;
    ROUND_START         = 1 [ (resdata.keyword_alias) = "开端" ];
    ROUND_TALENT        = 2 [ (resdata.keyword_alias) = "天赋" ];
    ROUND_RELEASE       = 3 [ (resdata.keyword_alias) = "全局投放" ];
    ROUND_AUCTION       = 4 [ (resdata.keyword_alias) = "拍卖" ];
    ROUND_MONSTER       = 5 [ (resdata.keyword_alias) = "打野" ];
    ROUND_FIGHT         = 6 [ (resdata.keyword_alias) = "对战" ];
    ROUND_POPULATION    = 7 [ (resdata.keyword_alias) = "人口" ];
    ROUNDFUNCTIONN_MAX  = 8;
}

message RES_RoundFunctionData {
    RES_RoundFunction RoundFunction = 1 [ (resdata.cname) = "类型", (resdata.bind) = "RES_RoundFunction" ];
    string RoundIcon                = 2 [ (resdata.cname) = "图标" ];
}

message ResRoundStateFlow {
    option (cltgen.pk)               = "RoundNum";
    option (cltgen.index)            = "RoundStage";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;
    option (cltgen.random_access)    = Runtime;

    enum RoundStageType
    {
        option (cltgen.gamecore_enum) = true;
        option (cltgen.csharp_enum) = true;

        RoundStageType_Warmup   = 0 [ (resdata.keyword_alias) = "热身" ];
        RoundStageType_Progress = 1 [ (resdata.keyword_alias) = "发育" ];
        RoundStageType_Duel     = 2 [ (resdata.keyword_alias) = "对抗" ];
        RoundStageType_Final    = 3 [ (resdata.keyword_alias) = "决赛" ];
    }

    uint32 RoundNum                                   = 1 [ (resdata.cname) = "回合数", (bingogen.primary_key) = 1 ];
    RoundStageType RoundStage                         = 2 [ (resdata.cname) = "大回合阶段" ];
    uint32 NoInterest                                 = 3 [ (resdata.cname) = "不结算利息" ];
    uint32 NoRefreshCard                              = 4 [ (resdata.cname) = "不刷新卡池" ];
    uint32 AddCoin                                    = 5 [ (resdata.cname) = "增加金币数" ];
    uint32 AddExp                                     = 6 [ (resdata.cname) = "增加经验数" ];
    string RoundName                                  = 7 [ (resdata.cname) = "回合显示名字", (resdata.translate) = true ];
    uint32 RoundStateType                             = 8 [ (resdata.cname) = "回合状态"];
    uint32 SaveRecoverData                            = 9 [ (resdata.cname) = "是否保存分段数据" ];
    string DisplayRoundNum                            = 10 [ (resdata.cname) = "显示回合", (resdata.translate) = true ];
    uint32 SynchroEntry                               = 11 [ (resdata.cname) = "同步进入" ];
    repeated RES_RoundFunctionData RoundFunctionDatas = 12 [ (resdata.cname) = "回合功能", (resdata.count) = "3" ];
    string RoundNickName                              = 13 [ (resdata.cname) = "大回合标题" , (resdata.translate) = true];
    string StageIcon                                  = 14 [ (resdata.cname) = "大回合Icon" ];
    bool DefaultShow                                  = 15 [ (resdata.cname) = "默认阶段显示" ];
}

message ResBattleRoundState {
    option (cltgen.pk)               = "RoundNum";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 RoundNum          = 1 [ (resdata.cname) = "回合数", (bingogen.primary_key) = 1 ];
    int32 PrepareTime        = 2 [ (resdata.cname) = "准备时间" ];
    int32 RaceTime           = 3 [ (resdata.cname) = "正赛时间" ];
    int32 OverTime           = 4 [ (resdata.cname) = "加时赛时间" ];
    uint32 ExtraDamage       = 5 [ (resdata.cname) = "额外伤害" ];
    int32 TeleportataionTime = 6 [ (resdata.cname) = "传送时间" ];
    int32 PreRaceTime        = 7 [ (resdata.cname) = "战前预备时间" ];
    uint32 DamageUpperLimit  = 8 [ (resdata.cname) = "伤害上限" ];
    int32 AirdropTime  = 9 [ (resdata.cname) = "全局投放时间" ];
}

message ResGameWatchLimit {
    option (cltgen.pk)               = "RoundStateType";
    option (cltgen.system_databin)   = true;
    option (cltgen.gamecore_databin) = true;

    uint32 RoundStateType = 1 [ (resdata.cname) = "回合状态" ];
    bool AllowGameWatch   = 2 [ (resdata.cname) = "是否允许观战" ];
}

message ResDT_ChessMoveTestInfo {
    uint32 ConfigId = 1 [ (resdata.cname) = "ID" ];
    int32 CoordX    = 2 [ (resdata.cname) = "X坐标" ];
    int32 CoordZ    = 3 [ (resdata.cname) = "Z坐标" ];
    uint32 Delay    = 4 [ (resdata.cname) = "延时" ];
    int32 DestX     = 5 [ (resdata.cname) = "X目标" ];
    int32 DestZ     = 6 [ (resdata.cname) = "Z目标" ];
}

message ResChessMoveTest {
    option (cltgen.pk)               = "PresetID";
    option (cltgen.gamecore_databin) = true;

    uint32 PresetID                               = 1 [ (resdata.cname) = "摆放ID", (bingogen.primary_key) = 1 ];
    repeated ResDT_ChessMoveTestInfo PresetDetail = 2 [ (resdata.cname) = "棋子", (resdata.count) = "20" ];
}

message ResDT_LevelCommonInfo {
    string Name                                        = 1 [ (resdata.cname) = "关卡名" ];
    string DesignFileName                              = 2 [ (resdata.cname) = "策划关卡文件名" ];
    string ArtistFileName                              = 3 [ (resdata.cname) = "美术关卡文件名" ];
    string ArtistExtFileName                           = 4 [ (resdata.cname) = "扩展关卡文件名" ];
    uint32 ForbiddenKickoutBeforeGameLoading           = 5 [ (resdata.cname) = "是否开启游戏前禁止顶号" ];
    uint32 ConfirmType                                 = 6 [ (resdata.cname) = "地图确认类型" ];
    uint32 NightStartTime                              = 7 [ (resdata.cname) = "中低配夜晚场景开启时间戳" ];
    uint32 NightEndTime                                = 8 [ (resdata.cname) = "中低配夜晚场景结束时间戳" ];
    uint32 NightDays                                   = 9 [ (resdata.cname) = "中低配夜晚场景启用天数" ];
    uint32 MaxAcntNum                                  = 10 [ (resdata.cname) = "玩家人数" ];
    uint32 MaxCamp                                     = 11 [ (resdata.cname) = "最大阵营数" ];
    uint32 LeastAcntNum                                = 12 [ (resdata.cname) = "最低开局玩家人数" ];
    uint32 MaxAcntTimeOut                              = 13 [ (resdata.cname) = "满人开局超时次数" ];
    uint32 ValidRoomType                               = 14 [ (resdata.cname) = "支持房间类型" ];
    uint32 IsAllowAddComAI                             = 15 [ (resdata.cname) = "房间是否禁止加电脑" ];
    uint32 HeroNum                                     = 16 [ (resdata.cname) = "武将上场人数" ];
    uint32 IsAllowHeroDup                              = 17 [ (resdata.cname) = "武将是否允许重复" ];
    uint32 HeroFormId                                  = 18 [ (resdata.cname) = "阵容ID" ];
    int32 HeroAIType                                   = 19 [ (resdata.cname) = "英雄AI方式" ];
    string ComputerHeroAI                              = 20 [ (resdata.cname) = "关卡特定电脑AI" ];
    int32 HeroBornAgeDelayTime                         = 21 [ (resdata.cname) = "英雄出生动画延迟播放时间" ];
    string ThumbnailPath                               = 22 [ (resdata.cname) = "缩略图路径" ];
    string MapPath                                     = 23 [ (resdata.cname) = "小地图路径" ];
    string BigMapPath                                  = 24 [ (resdata.cname) = "大地图路径" ];
    int32 MapWidth                                     = 25 [ (resdata.cname) = "逻辑地图宽度" ];
    int32 MapHeight                                    = 26 [ (resdata.cname) = "逻辑地图高度" ];
    int32 SmallMapWidth                                = 27 [ (resdata.cname) = "小地图宽度" ];
    int32 SmallMapHeight                               = 28 [ (resdata.cname) = "小地图高度" ];
    int32 BigMapWidth                                  = 29 [ (resdata.cname) = "大地图宽度" ];
    int32 BigMapHeight                                 = 30 [ (resdata.cname) = "大地图高度" ];
    int32 MapBlockWidth                                = 31 [ (resdata.cname) = "地图分块宽度" ];
    int32 MapBlockHeight                               = 32 [ (resdata.cname) = "地图分块高度" ];
    int32 UseNavHeightLimit                            = 33 [ (resdata.cname) = "启用导航片高度限值" ];
    float MapFowScale                                  = 34 [ (resdata.cname) = "小地图迷雾缩放值" ];
    float BigMapFowScale                               = 35 [ (resdata.cname) = "大地图迷雾缩放值" ];
    uint32 SoulAllocID                                 = 36 [ (resdata.cname) = "魂值经验分配规则ID" ];
    uint32 IsOpenExpCompensate                         = 37 [ (resdata.cname) = "是否开启经验补偿" ];
    repeated ResDT_CompensateInfo ExpCompensateDetail  = 38 [ (resdata.cname) = "经验补偿", (resdata.count) = "5" ];
    uint32 IsOpenCoinCompensate                        = 39 [ (resdata.cname) = "是否开启金币补偿" ];
    repeated ResDT_CompensateInfo CoinCompensateDetail = 40 [ (resdata.cname) = "金币补偿", (resdata.count) = "5" ];
    int32 ExtraSkillId                                 = 41 [ (resdata.cname) = "额外技能ID" ];
    int32 ExtraSkill2Id                                = 42 [ (resdata.cname) = "额外技能2ID" ];
    int32 ExtraSkill3Id                                = 43 [ (resdata.cname) = "额外技能3ID" ];
    int32 ExtraSkill4Id                                = 44 [ (resdata.cname) = "额外技能4ID" ];
    int32 ExtraPassiveSkillId1                         = 45 [ (resdata.cname) = "额外被动技能ID1" ];
    int32 ExtraPassiveSkillId2                         = 46 [ (resdata.cname) = "额外被动技能ID2" ];
    uint32 ExtraSkillLogicSlot                         = 47 [ (resdata.cname) = "额外技能逻辑槽位" ];
    uint32 ExtraSkill2LogicSlot                        = 48 [ (resdata.cname) = "额外技能2逻辑槽位" ];
    uint32 ExtraSkill3LogicSlot                        = 49 [ (resdata.cname) = "额外技能3逻辑槽位" ];
    uint32 ExtraSkill4LogicSlot                        = 50 [ (resdata.cname) = "额外技能4逻辑槽位" ];
    uint32 FinResultType                               = 51 [ (resdata.cname) = "结束页面类型" ];
    uint32 RandPickHero                                = 52 [ (resdata.cname) = "随机选将" ];
    string PreloadActorList                            = 53 [ (resdata.cname) = "预加载单位列表" ];
    uint32 AddWinCondStarId                            = 54 [ (resdata.cname) = "附加胜利条件ID" ];
    uint32 AddLoseCondStarId                           = 55 [ (resdata.cname) = "附加失败条件ID" ];
    uint32 TimeDuration                                = 56 [ (resdata.cname) = "单局游戏时长" ];
    uint32 SoulConfigId                                = 57 [ (resdata.cname) = "魂值基础配置ID" ];
    uint32 CameraFlip                                  = 58 [ (resdata.cname) = "镜头反转" ];
    uint32 CameraRotate                                = 59 [ (resdata.cname) = "镜头旋转" ];
    int32 SoldierActivateCountDelay1                   = 60 [ (resdata.cname) = "兵线播报延时1" ];
    int32 SoldierActivateCountDelay2                   = 61 [ (resdata.cname) = "兵线播报延时2" ];
    int32 SoldierActivateDelay                         = 62 [ (resdata.cname) = "兵线激活延时" ];
    uint32 BattleEquipLimit                            = 63 [ (resdata.cname) = "装备购买限制" ];
    uint32 BirthLevelConfig                            = 64 [ (resdata.cname) = "出生等级配置" ];
    uint32 ChaosPickRule                               = 65 [ (resdata.cname) = "乱斗选人规则" ];
    uint32 HeadPtsUpperLimit                           = 66 [ (resdata.cname) = "人头上限" ];
    uint32 SrvLeastDestoryTowerNum                     = 67 [ (resdata.cname) = "胜利最少摧毁塔数量" ];
    uint32 SrvLeastDestoryBaseNum                      = 68 [ (resdata.cname) = "胜利最少摧毁基地数量" ];
    uint32 SrvLeastKillCntNum                          = 69 [ (resdata.cname) = "胜利人头数限制" ];
    uint32 DealHangUp                                  = 70 [ (resdata.cname) = "是否有挂机AI" ];
    uint32 UnLockCondID                                = 71 [ (resdata.cname) = "解锁条件ID" ];
    uint32 ShowHonor                                   = 72 [ (resdata.cname) = "是否展示荣誉" ];
    ResDT_PickRuleInfo PickRuleInfo                    = 73 [ (resdata.cname) = "选将" ];
    uint32 PickTime                                    = 74 [ (resdata.cname) = "Pick时长" ];
    uint32 CooldownReduceUpperLimit                    = 75 [ (resdata.cname) = "冷却缩减上限" ];
    int32 pvpDifficulty                                = 76 [ (resdata.cname) = "pvp难度" ];
    uint32 chatID                                      = 77 [ (resdata.cname) = "选将聊天ID" ];
    ResDT_UnUseSkill UnUseSkillInfo                    = 78 [ (resdata.cname) = "" ];
    uint32 AttackOrderID                               = 79 [ (resdata.cname) = "攻击顺序" ];
    uint32 DynamicPropertyCfg                          = 80 [ (resdata.cname) = "动态属性配置" ];
    uint32 OriginalGoldCoinInBattle                    = 81 [ (resdata.cname) = "初始金币数量" ];
    uint32 CompensateExpBuffID                         = 82 [ (resdata.cname) = "补偿魂值等级收益BuffID" ];
    uint32 CompensateGoldBuffID                        = 83 [ (resdata.cname) = "补偿局内金币收益BuffID" ];
    uint32 BattleTaskOfCamp1                           = 84 [ (resdata.cname) = "阵营一任务" ];
    uint32 BattleTaskOfCamp2                           = 85 [ (resdata.cname) = "阵营二任务" ];
    string MusicStartEvent                             = 86 [ (resdata.cname) = "音乐开始" ];
    string MusicEndEvent                               = 87 [ (resdata.cname) = "音乐结束" ];
    string AmbientSoundEvent                           = 88 [ (resdata.cname) = "环境音" ];
    string BankResourceName                            = 89 [ (resdata.cname) = "Bank资源" ];
    uint32 SupportCameraDrag                           = 90 [ (resdata.cname) = "是否支持右摇杆拖拽" ];
    string GameMatchName                               = 91 [ (resdata.cname) = "比赛名称" ];
    uint32 HorizonMethod                               = 92 [ (resdata.cname) = "视野机制" ];
    uint32 IsEnableShopHorizonTab                      = 93 [ (resdata.cname) = "是否启用商店视野页签" ];
    uint32 IsEnableOrnamentSlot                        = 94 [ (resdata.cname) = "是否启用饰品栏" ];
    uint32 IsEnableGemstoneSlot                        = 95 [ (resdata.cname) = "是否启用宝石栏" ];
    uint32 EnableExtCommonSlot                         = 96 [ (resdata.cname) = "扩展普通装备数量" ];
    uint32 IsDisablePackage                            = 97 [ (resdata.cname) = "是否关闭仓库" ];
    int32 OrnamentSkillId                              = 98 [ (resdata.cname) = "饰品技能ID" ];
    int32 OrnamentSwitchCD                             = 99 [ (resdata.cname) = "饰品切换CD" ];
    int32 OrnamentFirstSwitchCD                        = 100 [ (resdata.cname) = "首次饰品切换CD" ];
    int32 OrnamentFirstSwitchCDEftTime                 = 101 [ (resdata.cname) = "首次饰品切换CD的生效时间" ];
    uint32 CompeteSvrJudgeNum                          = 102 [ (resdata.cname) = "比赛服裁判人数" ];
    uint32 JudgeNum                                    = 103 [ (resdata.cname) = "正式服裁判人数" ];
    uint32 PauseNum                                    = 104 [ (resdata.cname) = "可暂停次数" ];
    uint32 CompetePauseNum                             = 105 [ (resdata.cname) = "比赛服可暂停次数" ];
    uint32 WealGameSubType                             = 106 [ (resdata.cname) = "运营活动游戏子类型" ];
    uint32 SupportHighTowerSoldier                     = 107 [ (resdata.cname) = "是否支持高地兵" ];
    uint32 ShowTeamHint                                = 108 [ (resdata.cname) = "是否开启阵容提示" ];
    uint32 ShowWinRatio                                = 109 [ (resdata.cname) = "是否开启发送战绩" ];
    uint32 ForceTimeoutPick                            = 110 [ (resdata.cname) = "是否开启超时进游戏" ];
    uint32 EnableEquipExtraActiveSkill                 = 111 [ (resdata.cname) = "是否开启装备额外主动技能" ];
    int32 FakeSightRange                               = 112 [ (resdata.cname) = "假点亮视野半径" ];
    int32 HeroLiftTime                                 = 113 [ (resdata.cname) = "英雄出生生命时长" ];
    int32 HeroLiftTimeMaxLimit                         = 114 [ (resdata.cname) = "英雄生命时长上限" ];
    int32 ItemSellDiscount                             = 115 [ (resdata.cname) = "道具售卖折损" ];
    uint32 TowerWarmerAlways                           = 116 [ (resdata.cname) = "箭塔升温总是重置" ];
    string ForbidEquip                                 = 117 [ (resdata.cname) = "屏蔽装备ID" ];
    string BelongEquip                                 = 118 [ (resdata.cname) = "关卡专属装备ID" ];
    string ForbidShopEquip                             = 119 [ (resdata.cname) = "商店屏蔽装备ID" ];
    string ForbidReplaceShopEquip                      = 120 [ (resdata.cname) = "商店屏蔽替代装备ID" ];
    string PriceRaiseEquip                             = 121 [ (resdata.cname) = "价格递增装备ID" ];
    string PriceRaiseRatio                             = 122 [ (resdata.cname) = "装备价格递增万分比" ];
    uint32 AllHeroValid                                = 123 [ (resdata.cname) = "是否全英雄可用" ];
    uint32 UseShenfuEquipSys                           = 124 [ (resdata.cname) = "是否使用拾取装备系统" ];
    uint32 UseColorfulHud                              = 125 [ (resdata.cname) = "彩色血条" ];
    uint32 HeroJobBuffGroupID                          = 126 [ (resdata.cname) = "英雄职业Buff组ID" ];
    uint32 HeroBuffGroupID                             = 127 [ (resdata.cname) = "单英雄Buff组ID" ];
    uint32 IntimacyBuffGroupID                         = 128 [ (resdata.cname) = "亲密度Buff组ID" ];
    uint32 FinDramaID                                  = 129 [ (resdata.cname) = "结束剧情ID" ];
    uint32 LevelSwitchID                               = 130 [ (resdata.cname) = "玩法开关表索引" ];
    uint32 CompeteSvrSurrenderTime                     = 131 [ (resdata.cname) = "比赛服投降时间" ];
    uint32 SurrenderTime                               = 132 [ (resdata.cname) = "正式服投降时间" ];
    uint32 OriginalPriceSellTime                       = 133 [ (resdata.cname) = "装备原价售卖时间" ];
    uint32 SceneBrightnessSetID                        = 134 [ (resdata.cname) = "地图亮度调节索引" ];
    string SceneWeatherEffect                          = 135 [ (resdata.cname) = "场景天气效果配置" ];
    uint32 VoteHeroParam                               = 136 [ (resdata.cname) = "投票选将参数" ];
    uint32 SpeciSettingMemoryThreshold                 = 137 [ (resdata.cname) = "指定配置内存阈值" ];
    uint32 ForbidGpuScoreThreshold                     = 138 [ (resdata.cname) = "拒绝参与GPU评分阈值" ];
    uint32 ForbidMemoryThreshold                       = 139 [ (resdata.cname) = "拒绝参与内存阈值" ];
    uint32 WarningMemoryThreshold                      = 140 [ (resdata.cname) = "警告内存阈值" ];
    uint32 ForceLowQualityDeviceScore                  = 141 [ (resdata.cname) = "强制低配机型评分" ];
    uint32 ForceLowFPSDeviceScore                      = 142 [ (resdata.cname) = "强制低帧率机型评分" ];
    uint32 SettingStrategyIndex                        = 143 [ (resdata.cname) = "配置策略索引" ];
    uint32 streamScene                                 = 144 [ (resdata.cname) = "流式加载" ];
    uint32 blankModel                                  = 145 [ (resdata.cname) = "白模地图" ];
    int32 ViewPortWidth                                = 146 [ (resdata.cname) = "视口宽度" ];
    int32 ViewPortHeight                               = 147 [ (resdata.cname) = "视口高度" ];
    uint32 KillEftUseType                              = 148 [ (resdata.cname) = "击杀特效使用方式" ];
    uint32 KillEftUseListID                            = 149 [ (resdata.cname) = "击杀特效使用列表ID" ];
    uint32 CityEftUseType                              = 150 [ (resdata.cname) = "回城特效使用方式" ];
    uint32 CityEftUseListID                            = 151 [ (resdata.cname) = "回城特效使用列表ID" ];
    uint32 DeadEftUseType                              = 152 [ (resdata.cname) = "死亡特效使用方式" ];
    uint32 DeadEftUseListID                            = 153 [ (resdata.cname) = "死亡特效使用列表ID" ];
    uint32 BornEftUseType                              = 154 [ (resdata.cname) = "泉水特效使用方式" ];
    uint32 BornEftUseListID                            = 155 [ (resdata.cname) = "泉水特效使用列表ID" ];
    uint32 MatchEngineType                             = 156 [ (resdata.cname) = "匹配引擎类型" ];
    uint32 LerpMode                                    = 157 [ (resdata.cname) = "插值模式" ];
    uint32 SceneType                                   = 158 [ (resdata.cname) = "场景类型" ];
    uint32 EnableTrialCommunity                        = 159 [ (resdata.cname) = "审判社区开关" ];
    uint32 ReportReason                                = 160 [ (resdata.cname) = "立即举报类型" ];
    uint32 DisableVideoReport                          = 161 [ (resdata.cname) = "是否禁用视频举报" ];
    uint32 ReportUrlID                                 = 162 [ (resdata.cname) = "举报URL跳转ID" ];
    uint32 NotCalcNewMVP                               = 163 [ (resdata.cname) = "不计算分路金银牌" ];
    uint32 valuePropertyIndex                          = 164 [ (resdata.cname) = "属性数值配置索引" ];
    uint32 JungleEquipLevelNotShareIncome              = 165 [ (resdata.cname) = "不分经济和经验打野装备等级" ];
    uint32 AidEquipLevelNotShareIncome                 = 166 [ (resdata.cname) = "不分经济和经验辅助装备等级" ];
    uint32 AidNotShareIncomeLastTime                   = 167 [ (resdata.cname) = "辅助不分经济和经验持续时间" ];
    uint32 ExtraIfsId                                  = 168 [ (resdata.cname) = "IFS分包号" ];
    string ExtraIfsDlShowPic                           = 169 [ (resdata.cname) = "分包下载图地址" ];
    uint32 IsEnableBusinessEffect                      = 170 [ (resdata.cname) = "是否开启局内商业化效果" ];
    int32 DyingMoveSpeed                               = 171 [ (resdata.cname) = "濒死移速" ];
    uint32 DropItemInBattleType                        = 172 [ (resdata.cname) = "局内掉落局外道具类型" ];
    repeated uint32 DropItemInBattleRuleID             = 173 [ (resdata.cname) = "局内掉落局外道具规则ID", (resdata.count) = "3" ];
    uint32 DisableSelectSkill                          = 174 [ (resdata.cname) = "是否屏蔽召唤师技能" ];
    uint32 DisableSelectSymbol                         = 175 [ (resdata.cname) = "是否屏蔽符文页" ];
    uint32 DisableSelectEquipList                      = 176 [ (resdata.cname) = "是否屏蔽自定义装备" ];
    uint32 HangUp2AssistInterval                       = 177 [ (resdata.cname) = "挂机到托管时间间隔" ];
    uint32 UsableHeroCreateMethod                      = 178 [ (resdata.cname) = "可用英雄生成规则" ];
    uint32 UsableHeroCreateRuleID                      = 179 [ (resdata.cname) = "可用英雄生成规则ID" ];
    uint32 RankScoreRuleId                             = 180 [ (resdata.cname) = "排名得分规则" ];
    uint32 CsModeValid                                 = 181 [ (resdata.cname) = "CS模式可用" ];
    uint32 LevelActivityId                             = 182 [ (resdata.cname) = "关卡活动配置ID" ];
    uint32 IsSameTeamDiffCamp                          = 183 [ (resdata.cname) = "同队不同阵营" ];
    uint32 MaxTeamAcntNum                              = 184 [ (resdata.cname) = "组队最大人数" ];
    ResDT_TeamRangeRule TeamRangeRule                  = 185 [ (resdata.cname) = "组队规则" ];
    uint32 IsSkipWhiteList                             = 186 [ (resdata.cname) = "开房间跳过白名单检查" ];

    enum SettleRuleType
    {
        SettleRuleType_GAMERESULT = 0 [(resdata.keyword_alias) = "胜负结算"];
        SettleRuleType_RANK = 1 [(resdata.keyword_alias) = "排名结算"];
        SettleRuleType_LAST = 2;
    }
    SettleRuleType SettleRule                          = 187 [ (resdata.cname) = "结算规则" ];
    uint32 PreBPHeroID                                 = 188 [ (resdata.cname) = "预BP模式ID" ];
    uint32 PreBanHeroNum                               = 189 [ (resdata.cname) = "预Ban英雄个数" ];
    string ShareLogoIcon                               = 190 [ (resdata.cname) = "分享LOGO图" ];
    uint32 CampPlayerConfID                            = 191 [ (resdata.cname) = "匹配阵营人数配置ID" ];
    uint32 FullLvlSymbolPageOpen                       = 192 [ (resdata.cname) = "满级符文页是否开启" ];
    uint32 IgnoreHangupCheck                           = 193 [ (resdata.cname) = "屏蔽局内挂机检查" ];
    uint32 AllowNormalRoom                             = 194 [ (resdata.cname) = "允许开房间掉落" ];
    uint32 CombineGameID                               = 195 [ (resdata.cname) = "组合玩法ID" ];
}

message ResEntertainmentLevelInfo {
    option (cltgen.pk)               = "MapId";
    option (cltgen.gamecore_databin) = true;

    uint32 MapId                          = 1 [ (resdata.cname) = "关卡ID", (bingogen.primary_key) = 1 ];
    ResDT_LevelCommonInfo LevelCommonInfo = 2 [ (resdata.cname) = "" ];
    uint32 IsCanPVP                       = 3 [ (resdata.cname) = "是否支持PVP" ];
    uint32 IsCanPVE                       = 4 [ (resdata.cname) = "是否支持PVE" ];
    uint32 EntertainmentSubType           = 5 [ (resdata.cname) = "娱乐地图子类型" ];
    uint32 UseNickName                    = 6 [ (resdata.cname) = "是否匿名" ];
    uint32 NewBattleRoyaleAINum           = 7 [ (resdata.cname) = "大逃杀新手局AI数量" ];
    uint32 WarmBattleRoyaleAINum          = 8 [ (resdata.cname) = "大逃杀温暖局AI数量" ];
    uint32 FailWarmBattleRoyaleAINum      = 9 [ (resdata.cname) = "大逃杀连败温暖局AI数量" ];
    uint32 LowNormalBattleRoyaleAINum     = 10 [ (resdata.cname) = "大逃杀普通局低端AI数量" ];
    uint32 MiddleNormalBattleRoyaleAINum  = 11 [ (resdata.cname) = "大逃杀普通局中端AI数量" ];
    uint32 HighNormalBattleRoyaleAINum    = 12 [ (resdata.cname) = "大逃杀普通局高端AI数量" ];
    uint32 MultiCampRewardIndex           = 13 [ (resdata.cname) = "多阵营奖励地图序号" ];
    uint32 MultiCampKillRewardLimit       = 14 [ (resdata.cname) = "多阵营人头奖励上限" ];
    uint32 MultiCampKillRewardCoin        = 15 [ (resdata.cname) = "多阵营人头奖励金币" ];
    uint32 MultiCampKillRewardExp         = 16 [ (resdata.cname) = "多阵营人头奖励经验" ];
    uint32 MultiCampKillRewardProficiency = 17 [ (resdata.cname) = "多阵营人头奖励熟练度" ];
    uint32 MultiCampKillRewardParam       = 18 [ (resdata.cname) = "多阵营奖励系数" ];
    uint32 EnableMatchScore               = 19 [ (resdata.cname) = "是否开启匹配分" ];
    uint32 WarmBattleExtraParam           = 20 [ (resdata.cname) = "温暖局扩展参数" ];
    uint32 IsUseOneRoomMatch              = 21 [ (resdata.cname) = "是否用一台匹配服务器" ];
    uint32 CustomType                     = 22 [ (resdata.cname) = "自定义参数" ];
}

message ResPlayConstParam {
    option (cltgen.pk)               = "Type";
    option (cltgen.gamecore_databin) = true;
    option (cltgen.system_databin)   = true;

    enum KeyType {
        option (cltgen.gamecore_enum) = true;
        option (cltgen.csharp_enum)   = true;

        KeyType_NULL                                       = 0;
        KeyType_WIN_COIN                                   = 1 [ (resdata.keyword_alias) = "战斗胜利金币" ];
        KeyType_COIN_INTEREST_DEVISION_NUM                 = 2 [ (resdata.keyword_alias) = "金币利息除数" ];
        KeyType_COIN_INTEREST_1                            = 3 [ (resdata.keyword_alias) = "金币利息1" ];
        KeyType_COIN_INTEREST_2                            = 4 [ (resdata.keyword_alias) = "金币利息2" ];
        KeyType_COIN_INTEREST_3                            = 5 [ (resdata.keyword_alias) = "金币利息3" ];
        KeyType_COIN_INTEREST_4                            = 6 [ (resdata.keyword_alias) = "金币利息4" ];
        KeyType_COIN_INTEREST_5                            = 7 [ (resdata.keyword_alias) = "金币利息5" ];
        KeyType_OVER_TIME_BUFF1                            = 8 [ (resdata.keyword_alias) = "加时赛BUFF1" ];
        KeyType_OVER_TIME_BUFF2                            = 9 [ (resdata.keyword_alias) = "加时赛BUFF2" ];
        KeyType_PLAYER_MAX_BASE_LEVEL                      = 20 [ (resdata.keyword_alias) = "玩家最大基础等级" ];
        KeyType_HUAMULAN_UNIT_ID_1                         = 28 [ (resdata.keyword_alias) = "花木兰武器模型轻剑" ];
        KeyType_HUAMULAN_UNIT_ID_2                         = 29 [ (resdata.keyword_alias) = "花木兰武器模型重剑" ];
        KeyType_HUAMULAN_UNIT_BUFF_1                       = 30 [ (resdata.keyword_alias) = "花木兰武器模型轻剑BUFF" ];
        KeyType_HUAMULAN_UNIT_BUFF_2                       = 31 [ (resdata.keyword_alias) = "花木兰武器模型重剑BUFF" ];
        KeyType_MP_MIN_VALUE                               = 32 [ (resdata.keyword_alias) = "蓝量总值最低值" ];
        KeyType_BATTLE_Relative_Element_RANDOM_EFFECT_NUM  = 33 [ (resdata.keyword_alias) = "元素使能附加元素之力的种类总数" ];
        KeyType_PROJ8_BUY_EXP_ONCE                         = 34 [ (resdata.keyword_alias) = "自走棋单次购买经验" ];
        KeyType_PROJ8_AUCTION_ADD_TIME                     = 35 [ (resdata.keyword_alias) = "自走棋拍卖加时环节毫秒数" ];
        KeyType_TALENT_REBUILD_HP                          = 36 [ (resdata.keyword_alias) = "天赋重铸触发血量万分比" ];
        KeyType_TALENT_REBUILD_COUNT                       = 37 [ (resdata.keyword_alias) = "天赋重铸次数" ];
        KeyType_TD_REGENERATE_SHOW_CARD_LIST_COST          = 38 [ (resdata.keyword_alias) = "TD重新随机消耗" ];
        KeyType_SANFEN_UNIT_BUFF_1                         = 39 [ (resdata.keyword_alias) = "三分之地1号buff" ];
        KeyType_SANFEN_UNIT_BUFF_2                         = 40 [ (resdata.keyword_alias) = "三分之地2号buff" ];
        KeyType_SANFEN_UNIT_BUFF_3                         = 41 [ (resdata.keyword_alias) = "三分之地3号buff" ];
        KeyType_SANFEN_UNIT_BUFF_4                         = 42 [ (resdata.keyword_alias) = "三分之地4号buff" ];
        KeyType_SANFEN_UNIT_ID_1                           = 43 [ (resdata.keyword_alias) = "三分之地1号" ];
        KeyType_SANFEN_UNIT_ID_2                           = 44 [ (resdata.keyword_alias) = "三分之地2号" ];
        KeyType_SANFEN_UNIT_ID_3                           = 45 [ (resdata.keyword_alias) = "三分之地3号" ];
        KeyType_SANFEN_UNIT_ID_4                           = 46 [ (resdata.keyword_alias) = "三分之地4号" ];
        KeyType_PROJ8_LORD_AWARD_EXHIBITION_PORTRAIT_DELAY = 50 [ (resdata.keyword_alias) = "自走棋领主奖励立绘展示延迟" ];
        KeyType_PROJ8_LORD_AWARD_EXHIBITION_AWARD_DELAY    = 51 [ (resdata.keyword_alias) = "自走棋领主奖励宝箱展示延迟" ];
        KeyType_PROJ8_LORD_AWARD_EXHIBITION_INTERVAL       = 52 [ (resdata.keyword_alias) = "自走棋领主奖励展示间隔" ];
        KeyType_PROJ8_LORD_AWARD_ANNOUNCE_DELAY            = 53 [ (resdata.keyword_alias) = "自走棋领主奖励开奖延迟" ];
        KeyType_PROJ8_LORD_AWARD_ANNOUNCE_TIME             = 54 [ (resdata.keyword_alias) = "自走棋领主奖励开奖时间" ];
        KeyType_PROJ8_EXCHANGE_MAX_CARD_COUNT              = 55 [ (resdata.keyword_alias) = "自走棋换牌回合发牌数量" ];
        KeyType_PROJ8_EXCHANGE_CHOOSE_CARD_COUNT           = 56 [ (resdata.keyword_alias) = "自走棋换牌回合选牌数量" ];
        KeyType_PROJ8_EXCHANGE_CHOOSE_CARD_DURATION        = 57 [ (resdata.keyword_alias) = "自走棋换牌回合选牌时间" ];
        KeyType_PROJ8_EXCHANGE_LOCK_CARD_DURATION          = 58 [ (resdata.keyword_alias) = "自走棋换牌回合锁定时间" ];
        KeyType_PROJ8_BOSS_SCENE_ID                        = 59 [ (resdata.keyword_alias) = "自走棋打野地图ID" ];
        KeyType_PROJ8_MATCH_DATA_TYPE                      = 60 [ (resdata.keyword_alias) = "匹配规则类型" ];
        KeyType_EACH_ROUND_FIRST_REPICK_CARD_BASE_COST     = 62 [ (resdata.keyword_alias) = "每回合首次刷新商店基础价格" ];
        KeyType_EACH_ROUND_REPICK_CARD_BASE_COST           = 63 [ (resdata.keyword_alias) = "每回合后续刷新商店基础价格" ];
        KeyType_TEMPLATE_ID                                = 64 [ (resdata.keyword_alias) = "模板ID" ];
        KeyType_DESIGN_SCENE_ID                            = 65 [ (resdata.keyword_alias) = "策划场景ID" ];
        KeyType_BALANCETEST_WUKONG_BUFF_COUNT1             = 66 [ (resdata.keyword_alias) = "平衡性测试悟空buff数量1" ];
        KeyType_BALANCETEST_WUKONG_BUFF_COUNT2             = 67 [ (resdata.keyword_alias) = "平衡性测试悟空buff数量2" ];
        KeyType_BALANCETEST_BAJIE_BUFF_COUNT1              = 68 [ (resdata.keyword_alias) = "平衡性测试八戒1星buff数量" ];
        KeyType_BALANCETEST_BAJIE_BUFF_COUNT2              = 69 [ (resdata.keyword_alias) = "平衡性测试八戒2星buff数量" ];
        KeyType_BALANCETEST_BAJIE_BUFF_COUNT3              = 70 [ (resdata.keyword_alias) = "平衡性测试八戒3星buff数量" ];
        KeyType_DRAG_HEIGHT1                               = 71 [ (resdata.keyword_alias) = "拖动参数高度1" ];
        KeyType_DRAG_HEIGHT2                               = 72 [ (resdata.keyword_alias) = "拖动参数高度2" ];
        KeyType_DRAG_RADIUS1                               = 73 [ (resdata.keyword_alias) = "拖动参数半径1" ];
        KeyType_DRAG_RADIUS2                               = 74 [ (resdata.keyword_alias) = "拖动参数半径2" ];
        KeyType_RULER_EQUIP_RANDOM_NUM                     = 75 [ (resdata.keyword_alias) = "统治者推荐装备截止序号" ];
        KeyType_DEPOSIT_CARD_CLEAR_COUNTDOWN_TIME          = 76 [ (resdata.keyword_alias) = "弃牌清除倒计时" ];
        KeyType_AUCTION_RAISE_CD_TIME                      = 77 [ (resdata.keyword_alias) = "拍卖竞价CD时间" ];
        KeyType_EQUIP_HUANHUALINGPAI_CHANGE_COUNT          = 78 [ (resdata.keyword_alias) = "幻化令牌最大幻化次数" ];
        KeyType_EQUIP_HUANHUALINGPAI_START_SELECT_COUNT    = 79 [ (resdata.keyword_alias) = "幻化令牌起始备选数量" ];
        KeyType_SHARED_ALTERNATIVE_SLOT_COUNT              = 80 [ (resdata.keyword_alias) = "共享备战区槽位数量" ];
        KeyType_ALTERNATIVE_SLOT_COUNT                     = 81 [ (resdata.keyword_alias) = "备战区槽位数量" ];
		KeyType_SPECIAL_CARD_POOL_OFFSET				   = 82 [ (resdata.keyword_alias) = "个性化商店卡槽偏移"];
        KeyType_LORD_HP                                    = 83 [ (resdata.keyword_alias) = "棋手生命"];
        KeyType_SANFEN_1AREA                               = 84 [ (resdata.keyword_alias) = "三分之地一号地块"];
        KeyType_SANFEN_2AREA                               = 85 [ (resdata.keyword_alias) = "三分之地二号地块"];
        KeyType_SANFEN_3AREA                               = 86 [ (resdata.keyword_alias) = "三分之地三号地块"];
        KeyType_CHANGAN_GET_CHANGAN_COIN_BUFF              = 87 [ (resdata.keyword_alias) = "获得长安代币加buff"];
    }

    KeyType Type = 1 [ (resdata.cname) = "配置名" ];
    int32 Value  = 2 [ (resdata.cname) = "配置值" ];
}

message ResDT_DropMassiveCondition {
    string Group  = 1 [ (resdata.cname) = "集合" ];
    string Weight = 2 [ (resdata.cname) = "权重" ];
    string Price  = 3 [ (resdata.cname) = "价格" ];
    string Title  = 4 [ (resdata.cname) = "标题" ];
    repeated uint32 ParamGroup  = 5 [ (resdata.cname) = "参数", (resdata.count) = "2" ,(resdata.bind) = "RES_Massive_Treasure_Child_TYPE" ];
}

enum RES_Massive_Treasure_TYPE {
    option (cltgen.gamecore_enum) = true;
    option (cltgen.csharp_enum)   = true;
    option (cltgen.uninode_enum) = true;

    RES_Massive_Treasure_NULL                  = 0 [ (resdata.keyword_alias) = "" ];
    RES_Massive_Treasure_Optional              = 1 [ (resdata.keyword_alias) = "自选宝箱" ];
    RES_Massive_Treasure_After                 = 2 [ (resdata.keyword_alias) = "追赶宝箱" ];
    RES_Massive_Treasure_Pay                   = 3 [ (resdata.keyword_alias) = "付费宝箱" ];
    RES_Massive_Treasure_Heritage              = 4 [ (resdata.keyword_alias) = "遗产宝箱" ];
    RES_Massive_Treasure_Condition             = 5 [ (resdata.keyword_alias) = "条件递进式宝箱" ];
}

enum RES_Massive_Treasure_Child_TYPE {
    option (cltgen.gamecore_enum) = true;
    option (cltgen.csharp_enum)   = true;
    option (cltgen.uninode_enum) = true;

    RES_Massive_Treasure_Child_Null                    = 0 [ (resdata.keyword_alias) = "" ];
    RES_Massive_Treasure_Child_Condition_Change        = 1 [ (resdata.keyword_alias) = "条件变化类型" ];
    RES_Massive_Treasure_Child_Progressive             = 2 [ (resdata.keyword_alias) = "递进式类型" ];
    RES_Massive_Treasure_Child_Heritage                = 3 [ (resdata.keyword_alias) = "遗产类型" ];
}

message ResMassiveTreasureDataBin {
    option (cltgen.gamecore_databin) = true;
    option (cltgen.pk)               = "ID";

    uint32 ID                                               = 1 [ (resdata.cname) = "宝箱ID", (bingogen.primary_key) = 1  ];
    uint32 Type                                             = 2 [ (resdata.cname) = "宝箱类型", (resdata.bind) = "RES_Massive_Treasure_TYPE" ];
    uint32 ChildType                                        = 3 [ (resdata.cname) = "宝箱子类型", (resdata.bind) = "RES_Massive_Treasure_Child_TYPE" ];
    uint32 CanReceiveCount                                  = 4 [ (resdata.cname) = "宝箱可领取次数" ];
    uint32 ShowAwardCount                                   = 5 [ (resdata.cname) = "宝箱展示奖励数" ];
    repeated ResDT_DropMassiveCondition ConditionGroup      = 6 [ (resdata.cname) = "资源掉落", (resdata.count) = "6" ];
    bool IsCondition                                        = 7 [ (resdata.cname) = "是否开启领取条件", (resdata.bind) = "RES_ANONYMOUS" ];
    repeated uint32 ReceiveConditionGroup                   = 8 [ (resdata.cname) = "领取条件", (resdata.count) = "6" ];
}
